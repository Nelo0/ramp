const DeleteCustomersCustomerid = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]}]},"response":{"200":{"properties":{"id":{"readOnly":true,"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"first_name":{"type":"string","minLength":1,"maxLength":256},"last_name":{"type":"string","minLength":1,"maxLength":256},"email":{"type":"string","minLength":1,"maxLength":512},"status":{"type":"string","description":"Status of the customer. `manual_review` is deprecated and getting transitioned to `under_review`. `pending` is also deprecated and getting transitioned to `not_started`.\n\n`not_started` `pending` `incomplete` `awaiting_ubo` `manual_review` `under_review` `active` `rejected`","enum":["not_started","pending","incomplete","awaiting_ubo","manual_review","under_review","active","rejected"]},"capabilities":{"type":"object","properties":{"payin_crypto":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payout_crypto":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payin_fiat":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payout_fiat":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]}}},"future_requirements_due":{"readOnly":true,"description":"Information about requirements that may be needed in the future for the customer (eg. enhanced KYC checks for high volume transactions etc.). Please consult our KYC guide on how to resolve each requirement.","type":"array","minItems":0,"items":{"type":"string","enum":["id_verification"],"description":"`id_verification`"}},"requirements_due":{"readOnly":true,"description":"KYC requirements still needed to be completed. Please consult our KYC guide on how to resolve each requirement.","type":"array","minItems":0,"items":{"type":"string","enum":["external_account","id_verification"],"description":"`external_account` `id_verification`"}},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the customer","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the customer","format":"date-time"},"rejection_reasons":{"readOnly":true,"description":"Reasons why a customer KYC was rejected","type":"array","minItems":0,"items":{"description":"Reason why the kyc_status was rejected","properties":{"developer_reason":{"type":"string","description":"Developer information for why a customer was rejected. Not to be shared with the customer."},"reason":{"type":"string","description":"Reason for why a customer was rejected. To be shared with the customer."},"created_at":{"type":"string","description":"Time of creation of the rejection reason"}},"type":"object"}},"has_accepted_terms_of_service":{"readOnly":true,"description":"Whether the customer has accepted the terms of service.","type":"boolean"},"endorsements":{"readOnly":true,"description":"A summary of whether the customer has received approvals to complete onboarding or use certain products/services offered by Bridge.","type":"array","minItems":0,"items":{"required":["name","status"],"properties":{"name":{"description":"The endorsement type.\n\n`base` `sepa`","type":"string","enum":["base","sepa"]},"status":{"type":"string","enum":["incomplete","approved","revoked"],"description":"`incomplete` `approved` `revoked`"},"additional_requirements":{"description":"Additional requirements that need to be completed for obtaining the approval for the endorsement. \n\n1. `kyc_approval` and `tos_acceptance` are required for the `base` endorsement. \n2. `kyc_with_proof_of_address` and `tos_v2_acceptance` are required for `sepa`. If `tos_v2_acceptance` is not completed, a ToS acceptance link can be retrieved for the current customer from the endpoint `/v0/customers/{customerID}/tos_acceptance_link`. To fulfill the `kyc_with_proof_of_address` requirement, a KYC link can be specifically requested for the current customer via the endpoint `/v0/customers/{customerID}/kyc_link`, with `endorsement=sepa` included in the query string","type":"array","minItems":0,"items":{"type":"string","enum":["kyc_approval","tos_acceptance","kyc_with_proof_of_address","tos_v2_acceptance"],"description":"`kyc_approval` `tos_acceptance` `kyc_with_proof_of_address` `tos_v2_acceptance`"}}},"type":"object"}}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteCustomersCustomeridExternalAccountsExternalaccountid = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"externalAccountID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","externalAccountID"]}]},"response":{"200":{"required":["account_owner_name","id"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"customer_id":{"description":"The id of the Bridge customer that this External Account belongs to","type":"string","minLength":1,"readOnly":true},"currency":{"description":"Currency associated with the bank account. Default is `usd`. When `eur` is specified, the account type must be `iban`\n\n`usd` `eur`","type":"string","enum":["usd","eur"]},"bank_name":{"description":"Bank name of the account (e.g. \"Chase\")","type":"string","minLength":1,"maxLength":256},"account_owner_name":{"description":"Owner of the account Bank Account (e.g. \"John Doe\")","type":"string","minLength":1,"maxLength":256},"last_4":{"description":"Last 4 digits of the bank account number for `us` account type. This field is getting deprecated in favor of the `account.last_4` field","type":"string","minLength":1,"readOnly":true},"account_number":{"writeOnly":true,"description":"Account number of your bank account. This field is getting deprecated in favor of the `account.account_number` field for US accounts.","type":"string","minLength":12},"routing_number":{"writeOnly":true,"description":"Routing number of your bank account. This field is getting deprecated in favor of the `account.routing_number` field for US accounts.","type":"string","minLength":9},"account_type":{"description":"Type of the bank account. The default is `us`\n\n`us` `iban`","type":"string","enum":["us","iban"]},"iban":{"description":"IBAN bank account information. Required when the `account_type` is `iban`.","required":["account_number","bic","country","last_4"],"properties":{"account_number":{"type":"string","description":"The International Bank Account Number (IBAN) that will be used to send the funds","minLength":1,"writeOnly":true},"bic":{"type":"string","description":"The Business Identifier Code (BIC) that will be used to send the funds","minLength":1},"country":{"description":"Country in which the bank account is located. It's a three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account":{"description":"US bank account information. Required when the `account_type` is `us`. However, the top-level `account_number` and `routing_number` fields in deprecation will continue to be supported.","required":["account_number","routing_number","last_4"],"properties":{"account_number":{"type":"string","description":"The bank account number","minLength":1,"writeOnly":true},"routing_number":{"type":"string","description":"The bank routing number","minLength":9,"maxLength":9},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account_owner_type":{"description":"The type of the account ownership. Required when the `account_type` is `iban`. For `individual` ownership, `first_name` and `last_name` are required. For `business` ownership, `business_name` is required.\n\n`individual` `business`","type":"string","enum":["individual","business"]},"first_name":{"type":"string","description":"First name of the individual account holder. Required when the `account_owner_type` is `individual`"},"last_name":{"type":"string","description":"Last name of the individual account holder. Required when the `account_owner_type` is `individual`"},"business_name":{"type":"string","description":"Business name of the business account holder. Required when the `account_owner_type` is `business`"},"address":{"required":["street_line_1","country","city"],"properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"writeOnly":true,"description":"Address of the beneficiary of this account. Required for `us` accounts.","type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the External Account","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the External Account","format":"date-time"},"active":{"readOnly":true,"type":"boolean","description":"Whether or not this External Account is active"},"beneficiary_address_valid":{"readOnly":true,"type":"boolean","description":"Whether the beneficiary address is valid. A valid beneficiary address is required for all US External Accounts"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteTransfersTransferid = {"metadata":{"allOf":[{"type":"object","properties":{"transferID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["transferID"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteWebhooksWebhookid = {"metadata":{"allOf":[{"type":"object","properties":{"webhookID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["webhookID"]}]},"response":{"200":{"required":["id","url","status","public_key"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"url":{"type":"string","description":"The URL that the webhook will send events to"},"status":{"type":"string","description":"The status of the webhook. Only active webhooks will receive events automatically.\n\n`active` `disabled` `deleted`","enum":["active","disabled","deleted"]},"public_key":{"type":"string","description":"The public key (in PEM format) that should be used to verify the authenticity of webhook events"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomers = {"metadata":{"allOf":[{"type":"object","properties":{"starting_after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is a customer id. If this is specified, the next page that starts with a customer right AFTER the specified customer id on the customer timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that customers older than the specified customer id will be returned (shouldn't be set if ending_before is set)"},"ending_before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is a customer id. If this is specified, the previous page that ends with a customer right BEFORE the specified customer id on the customer timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that customers newer than the specified customer id will be returned (shouldn't be set if starting_after is set)"},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The numbers of items to return (default of 10, max of 100)"}},"required":[]}]},"response":{"200":{"title":"Customers","type":"object","required":["count","data"],"properties":{"count":{"description":"total number of items in data","type":"integer"},"data":{"type":"array","minItems":0,"items":{"properties":{"id":{"readOnly":true,"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"first_name":{"type":"string","minLength":1,"maxLength":256},"last_name":{"type":"string","minLength":1,"maxLength":256},"email":{"type":"string","minLength":1,"maxLength":512},"status":{"type":"string","description":"Status of the customer. `manual_review` is deprecated and getting transitioned to `under_review`. `pending` is also deprecated and getting transitioned to `not_started`.\n\n`not_started` `pending` `incomplete` `awaiting_ubo` `manual_review` `under_review` `active` `rejected`","enum":["not_started","pending","incomplete","awaiting_ubo","manual_review","under_review","active","rejected"]},"capabilities":{"type":"object","properties":{"payin_crypto":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payout_crypto":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payin_fiat":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payout_fiat":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]}}},"future_requirements_due":{"readOnly":true,"description":"Information about requirements that may be needed in the future for the customer (eg. enhanced KYC checks for high volume transactions etc.). Please consult our KYC guide on how to resolve each requirement.","type":"array","minItems":0,"items":{"type":"string","enum":["id_verification"],"description":"`id_verification`"}},"requirements_due":{"readOnly":true,"description":"KYC requirements still needed to be completed. Please consult our KYC guide on how to resolve each requirement.","type":"array","minItems":0,"items":{"type":"string","enum":["external_account","id_verification"],"description":"`external_account` `id_verification`"}},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the customer","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the customer","format":"date-time"},"rejection_reasons":{"readOnly":true,"description":"Reasons why a customer KYC was rejected","type":"array","minItems":0,"items":{"description":"Reason why the kyc_status was rejected","properties":{"developer_reason":{"type":"string","description":"Developer information for why a customer was rejected. Not to be shared with the customer."},"reason":{"type":"string","description":"Reason for why a customer was rejected. To be shared with the customer."},"created_at":{"type":"string","description":"Time of creation of the rejection reason"}},"type":"object"}},"has_accepted_terms_of_service":{"readOnly":true,"description":"Whether the customer has accepted the terms of service.","type":"boolean"},"endorsements":{"readOnly":true,"description":"A summary of whether the customer has received approvals to complete onboarding or use certain products/services offered by Bridge.","type":"array","minItems":0,"items":{"required":["name","status"],"properties":{"name":{"description":"The endorsement type.\n\n`base` `sepa`","type":"string","enum":["base","sepa"]},"status":{"type":"string","enum":["incomplete","approved","revoked"],"description":"`incomplete` `approved` `revoked`"},"additional_requirements":{"description":"Additional requirements that need to be completed for obtaining the approval for the endorsement. \n\n1. `kyc_approval` and `tos_acceptance` are required for the `base` endorsement. \n2. `kyc_with_proof_of_address` and `tos_v2_acceptance` are required for `sepa`. If `tos_v2_acceptance` is not completed, a ToS acceptance link can be retrieved for the current customer from the endpoint `/v0/customers/{customerID}/tos_acceptance_link`. To fulfill the `kyc_with_proof_of_address` requirement, a KYC link can be specifically requested for the current customer via the endpoint `/v0/customers/{customerID}/kyc_link`, with `endorsement=sepa` included in the query string","type":"array","minItems":0,"items":{"type":"string","enum":["kyc_approval","tos_acceptance","kyc_with_proof_of_address","tos_v2_acceptance"],"description":"`kyc_approval` `tos_acceptance` `kyc_with_proof_of_address` `tos_v2_acceptance`"}}},"type":"object"}}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomerid = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]}]},"response":{"200":{"properties":{"id":{"readOnly":true,"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"first_name":{"type":"string","minLength":1,"maxLength":256},"last_name":{"type":"string","minLength":1,"maxLength":256},"email":{"type":"string","minLength":1,"maxLength":512},"status":{"type":"string","description":"Status of the customer. `manual_review` is deprecated and getting transitioned to `under_review`. `pending` is also deprecated and getting transitioned to `not_started`.\n\n`not_started` `pending` `incomplete` `awaiting_ubo` `manual_review` `under_review` `active` `rejected`","enum":["not_started","pending","incomplete","awaiting_ubo","manual_review","under_review","active","rejected"]},"capabilities":{"type":"object","properties":{"payin_crypto":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payout_crypto":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payin_fiat":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payout_fiat":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]}}},"future_requirements_due":{"readOnly":true,"description":"Information about requirements that may be needed in the future for the customer (eg. enhanced KYC checks for high volume transactions etc.). Please consult our KYC guide on how to resolve each requirement.","type":"array","minItems":0,"items":{"type":"string","enum":["id_verification"],"description":"`id_verification`"}},"requirements_due":{"readOnly":true,"description":"KYC requirements still needed to be completed. Please consult our KYC guide on how to resolve each requirement.","type":"array","minItems":0,"items":{"type":"string","enum":["external_account","id_verification"],"description":"`external_account` `id_verification`"}},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the customer","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the customer","format":"date-time"},"rejection_reasons":{"readOnly":true,"description":"Reasons why a customer KYC was rejected","type":"array","minItems":0,"items":{"description":"Reason why the kyc_status was rejected","properties":{"developer_reason":{"type":"string","description":"Developer information for why a customer was rejected. Not to be shared with the customer."},"reason":{"type":"string","description":"Reason for why a customer was rejected. To be shared with the customer."},"created_at":{"type":"string","description":"Time of creation of the rejection reason"}},"type":"object"}},"has_accepted_terms_of_service":{"readOnly":true,"description":"Whether the customer has accepted the terms of service.","type":"boolean"},"endorsements":{"readOnly":true,"description":"A summary of whether the customer has received approvals to complete onboarding or use certain products/services offered by Bridge.","type":"array","minItems":0,"items":{"required":["name","status"],"properties":{"name":{"description":"The endorsement type.\n\n`base` `sepa`","type":"string","enum":["base","sepa"]},"status":{"type":"string","enum":["incomplete","approved","revoked"],"description":"`incomplete` `approved` `revoked`"},"additional_requirements":{"description":"Additional requirements that need to be completed for obtaining the approval for the endorsement. \n\n1. `kyc_approval` and `tos_acceptance` are required for the `base` endorsement. \n2. `kyc_with_proof_of_address` and `tos_v2_acceptance` are required for `sepa`. If `tos_v2_acceptance` is not completed, a ToS acceptance link can be retrieved for the current customer from the endpoint `/v0/customers/{customerID}/tos_acceptance_link`. To fulfill the `kyc_with_proof_of_address` requirement, a KYC link can be specifically requested for the current customer via the endpoint `/v0/customers/{customerID}/kyc_link`, with `endorsement=sepa` included in the query string","type":"array","minItems":0,"items":{"type":"string","enum":["kyc_approval","tos_acceptance","kyc_with_proof_of_address","tos_v2_acceptance"],"description":"`kyc_approval` `tos_acceptance` `kyc_with_proof_of_address` `tos_v2_acceptance`"}}},"type":"object"}}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridExternalAccounts = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]}]},"response":{"200":{"title":"ExternalAccount","type":"object","required":["data"],"properties":{"data":{"type":"array","minItems":0,"items":{"required":["account_owner_name","account_type","active","created_at","currency","customer_id","id","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"customer_id":{"description":"The id of the Bridge customer that this External Account belongs to","type":"string","minLength":1,"readOnly":true},"currency":{"description":"Currency associated with the bank account.\n\n`usd` `eur`","type":"string","enum":["usd","eur"]},"bank_name":{"description":"Bank name of the account (e.g. \"Chase\")","type":"string","minLength":1,"maxLength":256},"account_owner_name":{"description":"Owner of the account Bank Account (e.g. \"John Doe\")","type":"string","minLength":1,"maxLength":256},"last_4":{"description":"Last 4 digits of the bank account number for `us` account type. This field is getting deprecated in favor of the `account.last_4` field","type":"string","minLength":1,"readOnly":true},"account_number":{"writeOnly":true,"description":"Account number of your bank account. This field is getting deprecated in favor of the `account.account_number` field for US accounts.","type":"string","minLength":12},"routing_number":{"writeOnly":true,"description":"Routing number of your bank account. This field is getting deprecated in favor of the `account.routing_number` field for US accounts.","type":"string","minLength":9},"account_type":{"description":"Type of the bank account.\n\n`us` `iban`","type":"string","enum":["us","iban"]},"iban":{"description":"IBAN bank account information. It's populated when the `account_type` is `iban`.","required":["account_number","bic","country","last_4"],"properties":{"account_number":{"type":"string","description":"The International Bank Account Number (IBAN) that will be used to send the funds","minLength":1,"writeOnly":true},"bic":{"type":"string","description":"The Business Identifier Code (BIC) that will be used to send the funds","minLength":1},"country":{"description":"Country in which the bank account is located. It's a three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account":{"description":"US bank account information. It's populated when the `account_type` is `us`","required":["account_number","routing_number","last_4"],"properties":{"account_number":{"type":"string","description":"The bank account number","minLength":1,"writeOnly":true},"routing_number":{"type":"string","description":"The bank routing number","minLength":9,"maxLength":9},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account_owner_type":{"description":"Type of the account ownership\n\n`individual` `business`","type":"string","enum":["individual","business"]},"first_name":{"type":"string","description":"First name of the individual account owner"},"last_name":{"type":"string","description":"Last name of the individual account owner"},"business_name":{"type":"string","description":"Business name of the business account owner"},"address":{"required":["street_line_1","country","city"],"writeOnly":true,"description":"Address of the beneficiary of this account. Required for `us` accounts.","properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the External Account","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the External Account","format":"date-time"},"active":{"readOnly":true,"type":"boolean","description":"Whether or not this External Account is active"},"beneficiary_address_valid":{"readOnly":true,"type":"boolean","description":"Whether the beneficiary address is valid. A valid beneficiary address is required for all US External Accounts"}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridExternalAccountsExternalaccountid = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"externalAccountID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","externalAccountID"]}]},"response":{"200":{"required":["account_owner_name","account_type","active","created_at","currency","customer_id","id","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"customer_id":{"description":"The id of the Bridge customer that this External Account belongs to","type":"string","minLength":1,"readOnly":true},"currency":{"description":"Currency associated with the bank account.\n\n`usd` `eur`","type":"string","enum":["usd","eur"]},"bank_name":{"description":"Bank name of the account (e.g. \"Chase\")","type":"string","minLength":1,"maxLength":256},"account_owner_name":{"description":"Owner of the account Bank Account (e.g. \"John Doe\")","type":"string","minLength":1,"maxLength":256},"last_4":{"description":"Last 4 digits of the bank account number for `us` account type. This field is getting deprecated in favor of the `account.last_4` field","type":"string","minLength":1,"readOnly":true},"account_number":{"writeOnly":true,"description":"Account number of your bank account. This field is getting deprecated in favor of the `account.account_number` field for US accounts.","type":"string","minLength":12},"routing_number":{"writeOnly":true,"description":"Routing number of your bank account. This field is getting deprecated in favor of the `account.routing_number` field for US accounts.","type":"string","minLength":9},"account_type":{"description":"Type of the bank account.\n\n`us` `iban`","type":"string","enum":["us","iban"]},"iban":{"description":"IBAN bank account information. It's populated when the `account_type` is `iban`.","required":["account_number","bic","country","last_4"],"properties":{"account_number":{"type":"string","description":"The International Bank Account Number (IBAN) that will be used to send the funds","minLength":1,"writeOnly":true},"bic":{"type":"string","description":"The Business Identifier Code (BIC) that will be used to send the funds","minLength":1},"country":{"description":"Country in which the bank account is located. It's a three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account":{"description":"US bank account information. It's populated when the `account_type` is `us`","required":["account_number","routing_number","last_4"],"properties":{"account_number":{"type":"string","description":"The bank account number","minLength":1,"writeOnly":true},"routing_number":{"type":"string","description":"The bank routing number","minLength":9,"maxLength":9},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account_owner_type":{"description":"Type of the account ownership\n\n`individual` `business`","type":"string","enum":["individual","business"]},"first_name":{"type":"string","description":"First name of the individual account owner"},"last_name":{"type":"string","description":"Last name of the individual account owner"},"business_name":{"type":"string","description":"Business name of the business account owner"},"address":{"required":["street_line_1","country","city"],"writeOnly":true,"description":"Address of the beneficiary of this account. Required for `us` accounts.","properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the External Account","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the External Account","format":"date-time"},"active":{"readOnly":true,"type":"boolean","description":"Whether or not this External Account is active"},"beneficiary_address_valid":{"readOnly":true,"type":"boolean","description":"Whether the beneficiary address is valid. A valid beneficiary address is required for all US External Accounts"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridKycLink = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]},{"type":"object","properties":{"endorsement":{"type":"string","enum":["sepa"],"$schema":"http://json-schema.org/draft-04/schema#","description":"An endorsement is the approval required for a customer to use a particular product or service offered by Bridge"}},"required":[]}]},"response":{"200":{"type":"object","required":["url"],"properties":{"url":{"type":"string","description":"A hosted KYC link"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridLiquidationAddresses = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]}]},"response":{"200":{"required":["id","currency","chain","external_account_id","address","destination_payment_rail","destination_currency","created_at","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"currency":{"type":"string","enum":["usdc","usdt","dai"],"description":"`usdc` `usdt` `dai`"},"chain":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"external_account_id":{"description":"External bank account to which Bridge will send the funds. The currency associated with the External Account must match the destination currency.","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"destination_wire_message":{"description":"A message to be sent with a wire transfer.","type":"string","minLength":1,"maxLength":256},"destination_sepa_reference":{"description":"A reference message to be sent with a SEPA transaction.","type":"string","minLength":6,"maxLength":140},"destination_swift_reference":{"description":"A payment reference message or remittance information to be included in a SWIFT transaction.","type":"string","minLength":1,"maxLength":256},"destination_payment_rail":{"description":"The payment rail that Bridge will use to send funds to the customer.\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `sepa` `solana` `stellar` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"destination_currency":{"description":"The currency that Bridge will use to send funds to the customer.\n\n`usdc` `usdt` `dai` `usd` `eur`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"address":{"description":"The crypto wallet address the customer will send funds to in order to initiate the payment processing","type":"string","readOnly":true},"destination_address":{"type":"string","description":"The crypto wallet address that Bridge will use to send funds to the customer."},"destination_blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the Liquidation Address","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the Liquidation Address","format":"date-time"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridLiquidationAddressesLiquidationaddressid = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"liquidationAddressID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","liquidationAddressID"]}]},"response":{"200":{"required":["id","currency","chain","external_account_id","address","destination_payment_rail","destination_currency","created_at","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"currency":{"type":"string","enum":["usdc","usdt","dai"],"description":"`usdc` `usdt` `dai`"},"chain":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"external_account_id":{"description":"External bank account to which Bridge will send the funds. The currency associated with the External Account must match the destination currency.","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"destination_wire_message":{"description":"A message to be sent with a wire transfer.","type":"string","minLength":1,"maxLength":256},"destination_sepa_reference":{"description":"A reference message to be sent with a SEPA transaction.","type":"string","minLength":6,"maxLength":140},"destination_swift_reference":{"description":"A payment reference message or remittance information to be included in a SWIFT transaction.","type":"string","minLength":1,"maxLength":256},"destination_payment_rail":{"description":"The payment rail that Bridge will use to send funds to the customer.\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `sepa` `solana` `stellar` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"destination_currency":{"description":"The currency that Bridge will use to send funds to the customer.\n\n`usdc` `usdt` `dai` `usd` `eur`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"address":{"description":"The crypto wallet address the customer will send funds to in order to initiate the payment processing","type":"string","readOnly":true},"destination_address":{"type":"string","description":"The crypto wallet address that Bridge will use to send funds to the customer."},"destination_blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the Liquidation Address","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the Liquidation Address","format":"date-time"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridLiquidationAddressesLiquidationaddressidBalances = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"liquidationAddressID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","liquidationAddressID"]}]},"response":{"200":{"properties":{"data":{"properties":{"active_balance":{"description":"Active Balance (Money currently not being processed) of a Liquidation Address","type":"string"},"pending_balance":{"description":"Pending Balance (Money being processed) of a Liquidation Address","type":"string"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridLiquidationAddressesLiquidationaddressidDrains = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"liquidationAddressID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","liquidationAddressID"]}]},"response":{"200":{"properties":{"data":{"required":["id","customer_id","liquidation_address_id","amount","currency","state"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"amount":{"description":"Amount of the drain, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.","type":"string"},"customer_id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"liquidation_address_id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"currency":{"type":"string","enum":["usdc","usdt","dai","usd","eur"],"description":"`usdc` `usdt` `dai` `usd` `eur`"},"state":{"description":"Status of the drain\n\n`awaiting_funds` `in_review` `funds_received` `payment_submitted` `payment_processed` `canceled` `error` `returned` `refunded`","readOnly":true,"type":"string","enum":["awaiting_funds","in_review","funds_received","payment_submitted","payment_processed","canceled","error","returned","refunded"]},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the drain","format":"date-time"},"deposit_tx_hash":{"readOnly":true,"type":"string","description":"Hash of the Liquidation Address deposit that triggered this drain"},"from_address":{"readOnly":true,"type":"string","description":"The blockchain address that sent funds to the Liquidation Address"},"destination":{"readOnly":true,"description":"Destination information of a drain.","required":["payment_rail","currency"],"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"currency":{"type":"string","enum":["usdc","usdt","dai","usd"],"description":"`usdc` `usdt` `dai` `usd`"},"to_address":{"description":"The crypto wallet address that the customer will ultimately receive funds at","type":"string"},"blockchain_memo":{"description":"The memo to include in the transaction, for blockchains that support memos only","type":"string"},"external_account_id":{"description":"External bank account to which Bridge will send the funds.","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"wire_message":{"description":"A message to be sent with a wire transfer.","type":"string","minLength":1,"maxLength":256},"sepa_reference":{"description":"A reference message to be sent with a SEPA transaction.","type":"string","minLength":6,"maxLength":140},"swift_reference":{"description":"A payment reference message or remittance information to be included in a SWIFT transaction.","type":"string","minLength":1,"maxLength":256},"imad":{"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"trace_number":{"readOnly":true,"description":"The trace number of an ACH transfer","type":"string","pattern":"[0-9]","minLength":15,"maxLength":15}},"type":"object"},"destination_tx_hash":{"readOnly":true,"type":"string","description":"Hash of withdrawal of funds to the destination"},"return_details":{"readOnly":true,"description":"Return information, if the drain has been returned.","properties":{"reason":{"description":"The reason for the return, as given by the returning financial institution.","type":"string"}},"type":"object"},"receipt":{"readOnly":true,"description":"Receipt information of a drain.","required":["initial_amount","developer_fee","exchange_rate","subtotal_amount","converted_amount","outgoing_amount","destination_currency"],"properties":{"initial_amount":{"description":"The initial amount of the drain, denominated in the fiat currency to which the currency of the Liquidation Address is pegged. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.000000000000000001\" etc.","type":"string"},"developer_fee":{"description":"The developer fee, denominated in the fiat currency to which the currency of the Liquidation Address is pegged. This fee is a specific amount deducted from the initial total before conversion, rather than a percentage.","type":"string"},"subtotal_amount":{"description":"The initial amount of the drain less the `developer_fee`, denominated in the fiat currency to which the Liquidation Address currency is pegged. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.000000000000000001\" etc.","type":"string"},"gas_fee":{"description":"The fee that is deducted from the withdrawn amount to pay for gas.  Only included for crypto withdrawals that cost gas (e.g. USDT or DAI). It's denominated in the fiat currency to which the destination currency is pegged.","type":"string"},"converted_amount":{"description":"The converted amount of the drain. It's denominated in the destination currency or its pegged fiat currency.","type":"string"},"exchange_rate":{"description":"The effective exchange rate that can be calculated by dividing the converted amount by the amount available for conversion after deducting the developer fee."},"outgoing_amount":{"description":"The final amount of the drain, equal to the `converted_amount` minus any gas fees. It's denominated in the destination currency or its pegged fiat currency.","type":"string"},"destination_currency":{"type":"string","enum":["usdc","usdt","dai","usd"],"description":"The currency of the fund sent to the customer.\n\n`usdc` `usdt` `dai` `usd`"},"url":{"description":"The URL of a user-facing copy of the receipt.","type":"string"}},"type":"object"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridStaticMemos = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]}]},"response":{"200":{"title":"Static Memos","type":"object","required":["count","data"],"properties":{"count":{"description":"total number of items in data","type":"integer"},"data":{"type":"array","minItems":0,"items":{"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]},"source_deposit_instructions":{"readOnly":true,"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"currency":{"type":"string","enum":["usd"],"examples":["usd"],"description":"`usd`"},"deposit_message":{"description":"The message that the customer MUST include in their wire memo/message or ACH description.","type":"string","examples":["EXAMPLE_MEMO_MESSAGE"]},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string","examples":["Lead Bank"]},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string","examples":["1801 Main St., Kansas City, MO 64108"]},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string","examples":["87654321"]},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string","examples":["123456789"]},"bank_beneficiary_name":{"description":"The name of the beneficiary of the bank account that the customer should send the deposit to","type":"string","examples":["Bridge Ventures Inc"]}},"type":"object"},"destination":{"required":["currency","payment_rail","address"],"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"],"description":"`usdc` `usdt` `dai`"},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]},"blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"}},"type":"object"}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridStaticMemosStaticmemoid = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"staticMemoID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","staticMemoID"]}]},"response":{"200":{"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]},"source_deposit_instructions":{"readOnly":true,"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"currency":{"type":"string","enum":["usd"],"examples":["usd"],"description":"`usd`"},"deposit_message":{"description":"The message that the customer MUST include in their wire memo/message or ACH description.","type":"string","examples":["EXAMPLE_MEMO_MESSAGE"]},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string","examples":["Lead Bank"]},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string","examples":["1801 Main St., Kansas City, MO 64108"]},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string","examples":["87654321"]},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string","examples":["123456789"]},"bank_beneficiary_name":{"description":"The name of the beneficiary of the bank account that the customer should send the deposit to","type":"string","examples":["Bridge Ventures Inc"]}},"type":"object"},"destination":{"required":["currency","payment_rail","address"],"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"],"description":"`usdc` `usdt` `dai`"},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]},"blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridStaticMemosStaticmemoidHistory = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"staticMemoID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","staticMemoID"]},{"type":"object","properties":{"tx_hash":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The hash of the transaction"},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The numbers of items to return (default of 10, max of 100)"},"starting_after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is an event id. If this is specified, the next page that starts with an event right AFTER the specified event id on the event timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that events older than the specified event id will be returned (shouldn't be set if ending_before is set)"},"ending_before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is an event id. If this is specified, the previous page that ends with an event right BEFORE the specified event id on the event timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that events newer than the specified event id will be returned (shouldn't be set if starting_after is set)"},"event_type":{"type":"string","enum":["funds_received","payment_submitted","payment_processed","in_review","refund","microdeposit","account_update","deactivation","activation"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter history by event type"}},"required":[]}]},"response":{"200":{"title":"Static Memo history","type":"object","required":["count","data"],"properties":{"count":{"type":"integer","description":"The number of events returned"},"data":{"type":"array","minItems":0,"items":{"required":["id"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"type":{"type":"string","description":"The type of activity\n\n`funds_received` `payment_submitted` `payment_processed` `in_review` `refund` `account_update`","enum":["funds_received","payment_submitted","payment_processed","in_review","refund","account_update"]},"customer_id":{"description":"The id of the Bridge customer that this static memo event belongs to","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"static_memo_id":{"description":"The id of the Static Memo that this event belongs to","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"amount":{"type":"string","description":"Amount of the payin, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"currency":{"type":"string","enum":["usdc","usdt","dai","usd"],"description":"`usdc` `usdt` `dai` `usd`"},"developer_fee_amount":{"type":"string","description":"Amount of the developer fee if any, represented as a dollar denominated string. This is the final amount taken out of what is ultimately received by your customer, not a percentage. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"exchange_fee_amount":{"type":"string","description":"Amount of the exchange fee if any, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"subtotal_amount":{"type":"string","description":"Amount of the subtotal, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"gas_fee":{"type":"string","description":"Amount of the gas fee if any, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"deposit_id":{"type":"string","description":"The id of the deposit related to this event. This id can be used to link multiple events to the same transaction"},"destination_tx_hash":{"type":"string","description":"The hash of the on-chain transfer to the destination address"},"source_deposit_instructions":{"required":["deposit_message"],"properties":{"deposit_message":{"description":"The message that the customer MUST include in their wire memo/message or ach push description","type":"string"}},"type":"object"},"source":{"required":["payment_rail"],"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"bank_beneficiary_name":{"description":"(Wire only) The name of the beneficiary of the bank account that the customer sent the deposit to","type":"string"},"bank_routing_number":{"description":"(Wire only) The routing number of the bank that the customer sent the deposit to","type":"string"},"bank_name":{"description":"(Wire only) The name of the bank that the customer sent the deposit to","type":"string"},"imad":{"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"omad":{"description":"The OMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"description":{"description":"(ACH only) The description of the deposit that the customer sent","type":"string"}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the event","format":"date-time"}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridTosAcceptanceLink = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]}]},"response":{"200":{"type":"object","required":["url"],"properties":{"url":{"type":"string","description":"A hosted URL for ToS acceptance"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridTransfers = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]},{"type":"object","properties":{"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The numbers of items to return (default of 10, max of 100)"},"starting_after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is a transfer id. If this is specified, the next page that starts with a transfer right AFTER the specified transfer id on the transfer timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that transfers older than the specified transfer id will be returned (shouldn't be set if ending_before is set)"},"ending_before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is a transfer id. If this is specified, the previous page that ends with a transfer right BEFORE the specified transfer id on the transfer timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that transfers newer than the specified transfer id will be returned (shouldn't be set if starting_after is set)"},"tx_hash":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The hash of the transaction"},"updated_after_ms":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"This is a unix timestamp in milliseconds. If this is specified, transfers updated AFTER the specified timestamp will be returned"},"updated_before_ms":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"This is a unix timestamp in milliseconds. If this is specified, transfers updated BEFORE the specified timestamp will be returned"}},"required":[]}]},"response":{"200":{"title":"Transfers","type":"object","required":["count","data"],"properties":{"count":{"type":"integer","description":"The number of transfers returned"},"data":{"type":"array","minItems":0,"items":{"required":["id","amount","developer_fee","currency","on_behalf_of","source","destination","state","receipt","created_at","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"client_reference_id":{"description":"A client-provided reference ID that uniquely identifies a resource in the client's system","type":"string","minLength":1,"maxLength":256},"amount":{"description":"Amount of the transfer, expressed as a decimal string.  Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt is denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged.","type":"string"},"currency":{"description":"Fiat currency for the transfer amount and developer fee. It's the source currency if that is a fiat currency or the fiat currency to which the source currency is pegged.\n\n`usd` `eur`","type":"string","enum":["usd","eur"]},"on_behalf_of":{"description":"The id of the Bridge customer that you are moving funds on behalf of.","type":"string"},"developer_fee":{"description":"The fee, expressed as a decimal string, represents the amount you wish to reserve for your own account. This fee is the final amount deducted from what your customer ultimately receives, rather than a percentage.\n\nIt is denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged.","type":"string"},"source":{"description":"The source of the transfer, which could be an external bank account, a bridge account, or a crypto wallet address","required":["currency","payment_rail"],"properties":{"currency":{"description":"The source currency\n\n`usdc` `usdt` `dai` `usd` `eur`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"payment_rail":{"description":"The source payment rail\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `sepa` `solana` `stellar` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"external_account_id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"omad":{"readOnly":true,"description":"The OMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"imad":{"readOnly":true,"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"bank_beneficiary_name":{"description":"(Wire only) The name of the beneficiary of the bank account that the customer sent the deposit to","type":"string","readOnly":true},"bank_routing_number":{"description":"(Wire only) The routing number of the bank that the customer sent the deposit to","type":"string","readOnly":true},"bank_name":{"description":"(Wire only) The name of the bank that the customer sent the deposit to","type":"string","readOnly":true},"description":{"description":"(ACH only) The description of the deposit that the customer sent","type":"string","readOnly":true},"from_address":{"description":"The crypto wallet address that the customer will send funds from, in order to kick off this transfer","type":"string"}},"type":"object"},"destination":{"description":"The destination of the transfer, which could be an external bank account, a bridge account, or a crypto wallet address","required":["currency","payment_rail"],"properties":{"currency":{"description":"The destination currency\n\n`usdc` `usdt` `dai` `usd` `eur`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"payment_rail":{"description":"The destination payment rail\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `sepa` `solana` `stellar` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"external_account_id":{"description":"External bank account Bridge should send the funds to. The currency associated with the External Account must match the destination currency.","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"omad":{"readOnly":true,"description":"The OMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"imad":{"readOnly":true,"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"trace_number":{"readOnly":true,"description":"The trace number of an ACH transfer","type":"string","pattern":"[0-9]","minLength":15,"maxLength":15},"wire_message":{"description":"A message to be sent with a wire transfer, only allowed when the payment rail is a wire.  This message will be validated against 4 lines, each with a max length of 35 char according to the Fedwire standard.","type":"string","minLength":1,"maxLength":256},"sepa_reference":{"description":"A reference message to be sent with a SEPA transaction. It must be from 6 to 140 characters. The allowed characters are `a-z`, `A-Z`, `0-9`, spaces, ampersand (`&`), hyphen (`-`), full stop (`.`), and solidus (`/`).","type":"string","minLength":6,"maxLength":140},"swift_reference":{"description":"A payment reference message or remittance information to be included in a SWIFT transaction. It can have at most 4 lines (separated by \"\\n\"), each line with a max length of 35 chars. The allowed characters are `a-z`, `A-Z`, `0-9`, special characters (`/` `-` `?` `:` `(` `)` `.` `,` `'` `+`), and space","type":"string","minLength":1,"maxLength":256},"to_address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at, in order to complete this transfer","type":"string"},"blockchain_memo":{"description":"A message to be sent with a crypto transaction, only allowed when the payment rail is Stellar.","type":"string"}},"type":"object"},"state":{"description":"Status of the transfer. See [Transfer States](https://apidocs.bridge.xyz/docs/transfers-1#transfer-states) for more details.\n\n`awaiting_funds` `in_review` `funds_received` `payment_submitted` `payment_processed` `canceled` `error` `returned` `refunded`","readOnly":true,"type":"string","enum":["awaiting_funds","in_review","funds_received","payment_submitted","payment_processed","canceled","error","returned","refunded"]},"source_deposit_instructions":{"readOnly":true,"description":"Some transfers require a deposit to be made by the customer before Bridge can start the process.  Instructions for how to kick off the transfer will be included here.  The deposit must match these instructions exactly, or the transfer will fail.","required":["payment_rail","amount","currency"],"properties":{"payment_rail":{"description":"The source payment rail\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar` `sepa` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar","sepa","swift"]},"amount":{"description":"Amount of the deposit, expressed as a decimal string. It's denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.","type":"string"},"currency":{"type":"string","enum":["usdc","usdt","dai","usd","eur"],"description":"The source currency\n\n`usdc` `usdt` `dai` `usd` `eur`"},"from_address":{"description":"The crypto wallet address that the customer will send funds from, in order to kick off this transfer","type":"string"},"to_address":{"description":"The crypto wallet address the customer will send funds to in order to initiate the payment processing","type":"string"},"deposit_message":{"description":"The message that the customer MUST include in their `wire memo/message`, `ach push description`, `sepa reference`, or `swift reference/remittance information`.","type":"string"},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string"},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string"},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string"},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string"},"bank_beneficiary_name":{"description":"The name of the beneficiary of the bank account that the customer should send the deposit to","type":"string"}},"type":"object"},"receipt":{"description":"Receipt information of a transfer","required":["initial_amount","developer_fee","exchange_fee","subtotal_amount"],"properties":{"initial_amount":{"description":"The initial amount of the transfer, represented as a decimal string. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt's denominated in the transfer's fiat currency (see the top-level `currency` field for more info)","type":"string"},"developer_fee":{"description":"The fee, expressed as a decimal string, represents the amount you wish to reserve for your own account.  This fee is the final amount deducted from what your customer ultimately receives, rather than a percentage.\n\nIt is denominated in the transfer's fiat currency (see the top-level `currency` field for more info).","type":"string"},"exchange_fee":{"description":"The fee, expressed as a decimal string, represents the amount Bridge charges for facilitating the transfer.  This is the final amount to take out of what is ultimately received by your customer, not a percentage.\n\nIt's denominated in the transfer's fiat currency (see top-level `currency` field for more info).","type":"string"},"subtotal_amount":{"description":"The initial amount of the transfer less fixed fees (including the developer_fee and exchange_fee). Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt's denominated in the transfer's fiat currency (see top-level `currency` field for more info).","type":"string"},"remaining_prefunded_balance":{"description":"For Prefunded Accounts, this value will represent the remaining account balance after the transfer.","type":"string"},"gas_fee":{"description":"The fee, expressed as a decimal string. It's deducted from the withdrawn amount to pay for gas.  Only nonzero to crypto withdrawals that cost gas (e.g. USDT or DAI), and only known when the transaction is confirmed on-chain.  Will be missing if not yet known.\n\nIt's denominated in the fiat currency to which the destination currency is pegged.","type":"string"},"final_amount":{"description":"The final amount of the transfer, expressed as a decimal string, equal to the subtotal_amount minus any gas fees.  If the gas fee is not known, this field will be missing.  Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt's denominated in the destination currency if that is a fiat currency or the fiat currency to which the destination currency is pegged.","type":"string"},"source_tx_hash":{"description":"The hash of the on-chain deposit to the source address, where applicable"},"destination_tx_hash":{"description":"The hash of the on-chain transfer to the destination address, where applicable"},"exchange_rate":{"description":"The effective exchange rate can be calculated by dividing the converted amount by the amount available for conversion after deducting the developer fee. This rate includes a currency conversion spread and is subject to a rounding precision loss during the calculation. Currently it's populated for SEPA onramp/offramp transfers only."},"url":{"description":"The URL of a user-facing copy of the receipt.","type":"string"}},"type":"object"},"return_details":{"readOnly":true,"description":"Return information, if the transfer has been returned.","properties":{"reason":{"description":"The reason for the return, as given by the returning financial institution.","type":"string"}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the transfer","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of update of the transfer","format":"date-time"}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridVirtualAccounts = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]}]},"response":{"200":{"title":"Virtual Accounts","type":"object","required":["count","data"],"properties":{"count":{"description":"total number of items in data","type":"integer"},"data":{"type":"array","minItems":0,"items":{"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"status":{"description":"The activation status of the Virtual Account\n\n`activated` `deactivated`","type":"string","enum":["activated","deactivated"]},"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]},"source_deposit_instructions":{"readOnly":true,"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"deprecated":true,"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"payment_rails":{"description":"The payment rails supported by these deposit instructions","type":"array","items":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["ach_push"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"}},"currency":{"type":"string","enum":["usd"],"examples":["usd"],"description":"`usd`"},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string","examples":["Lead Bank"]},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string","examples":["1801 Main St., Kansas City, MO 64108"]},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string","examples":["87654321"]},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string","examples":["123456789"]}},"type":"object"},"destination":{"required":["currency","payment_rail","address"],"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"],"description":"`usdc` `usdt` `dai`"},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]},"blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"}},"type":"object"}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridVirtualAccountsVirtualaccountid = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"virtualAccountID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","virtualAccountID"]}]},"response":{"200":{"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"status":{"description":"The activation status of the Virtual Account\n\n`activated` `deactivated`","type":"string","enum":["activated","deactivated"]},"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]},"source_deposit_instructions":{"readOnly":true,"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"deprecated":true,"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"payment_rails":{"description":"The payment rails supported by these deposit instructions","type":"array","items":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["ach_push"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"}},"currency":{"type":"string","enum":["usd"],"examples":["usd"],"description":"`usd`"},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string","examples":["Lead Bank"]},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string","examples":["1801 Main St., Kansas City, MO 64108"]},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string","examples":["87654321"]},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string","examples":["123456789"]}},"type":"object"},"destination":{"required":["currency","payment_rail","address"],"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"],"description":"`usdc` `usdt` `dai`"},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]},"blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomersCustomeridVirtualAccountsVirtualaccountidHistory = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"virtualAccountID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","virtualAccountID"]},{"type":"object","properties":{"tx_hash":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The hash of the transaction"},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The numbers of items to return (default of 10, max of 100)"},"starting_after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is an event id. If this is specified, the next page that starts with an event right AFTER the specified event id on the event timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that events older than the specified event id will be returned (shouldn't be set if ending_before is set)"},"ending_before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is an event id. If this is specified, the previous page that ends with an event right BEFORE the specified event id on the event timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that events newer than the specified event id will be returned (shouldn't be set if starting_after is set)"},"event_type":{"type":"string","enum":["funds_received","payment_submitted","payment_processed","in_review","refund","microdeposit","account_update","deactivation","activation"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter history by event type"}},"required":[]}]},"response":{"200":{"title":"Virtual Account history","type":"object","required":["count","data"],"properties":{"count":{"type":"integer","description":"The number of events returned"},"data":{"type":"array","minItems":0,"items":{"required":["id"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"type":{"type":"string","description":"The type of activity\n\n`funds_received` `payment_submitted` `payment_processed` `in_review` `refund` `microdeposit` `account_update` `deactivation` `activation`","enum":["funds_received","payment_submitted","payment_processed","in_review","refund","microdeposit","account_update","deactivation","activation"]},"customer_id":{"description":"The id of the Bridge customer that this Virtual Account event belongs to","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"virtual_account_id":{"description":"The id of the Virtual Account that this Virtual Account event belongs to","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"amount":{"type":"string","description":"Amount of the payin, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"currency":{"type":"string","enum":["usdc","usdt","dai","usd"],"description":"`usdc` `usdt` `dai` `usd`"},"developer_fee_amount":{"type":"string","description":"Amount of the developer fee if any, represented as a dollar denominated string. This is the final amount taken out of what is ultimately received by your customer, not a percentage. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"exchange_fee_amount":{"type":"string","description":"Amount of the exchange fee if any, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"subtotal_amount":{"type":"string","description":"Amount of the subtotal, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"gas_fee":{"type":"string","description":"Amount of the gas fee if any, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"deposit_id":{"type":"string","description":"The id of the deposit related to this event. This id can be used to link multiple events to the same transaction"},"destination_tx_hash":{"type":"string","description":"The hash of the on-chain transfer to the destination address"},"source":{"required":["payment_rail"],"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"description":{"description":"(ACH only) The description of the deposit that the customer sent","type":"string","readOnly":true},"sender_name":{"description":"(ACH only) The name of the business or individual who initiated the ACH","type":"string","readOnly":true},"sender_bank_routing_number":{"description":"(ACH only) The routing number of the entity that initiated this ACH transaction","type":"string","readOnly":true},"trace_number":{"description":"(ACH only) The unique, a 15-digit number associated with each ACH transaction that is used for tracking and reconciling transactions","type":"string","readOnly":true},"bank_routing_number":{"description":"(Wire only) The routing number of the bank that sent the wire to the Virtual Account","type":"string","readOnly":true},"bank_name":{"description":"(Wire only) The name of the bank that sent the wire","type":"string","readOnly":true},"bank_beneficiary_name":{"description":"(Wire only) The name of the beneficiary of the bank account that the customer sent the deposit to","type":"string","readOnly":true},"imad":{"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40,"readOnly":true}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the event","format":"date-time"}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetDeveloperFeeExternalAccount = {"response":{"200":{"required":["account_owner_name","account_type","active","created_at","currency","customer_id","id","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"customer_id":{"description":"The id of the Bridge customer that this External Account belongs to","type":"string","minLength":1,"readOnly":true},"currency":{"description":"Currency associated with the bank account.\n\n`usd` `eur`","type":"string","enum":["usd","eur"]},"bank_name":{"description":"Bank name of the account (e.g. \"Chase\")","type":"string","minLength":1,"maxLength":256},"account_owner_name":{"description":"Owner of the account Bank Account (e.g. \"John Doe\")","type":"string","minLength":1,"maxLength":256},"last_4":{"description":"Last 4 digits of the bank account number for `us` account type. This field is getting deprecated in favor of the `account.last_4` field","type":"string","minLength":1,"readOnly":true},"account_number":{"writeOnly":true,"description":"Account number of your bank account. This field is getting deprecated in favor of the `account.account_number` field for US accounts.","type":"string","minLength":12},"routing_number":{"writeOnly":true,"description":"Routing number of your bank account. This field is getting deprecated in favor of the `account.routing_number` field for US accounts.","type":"string","minLength":9},"account_type":{"description":"Type of the bank account.\n\n`us` `iban`","type":"string","enum":["us","iban"]},"iban":{"description":"IBAN bank account information. It's populated when the `account_type` is `iban`.","required":["account_number","bic","country","last_4"],"properties":{"account_number":{"type":"string","description":"The International Bank Account Number (IBAN) that will be used to send the funds","minLength":1,"writeOnly":true},"bic":{"type":"string","description":"The Business Identifier Code (BIC) that will be used to send the funds","minLength":1},"country":{"description":"Country in which the bank account is located. It's a three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account":{"description":"US bank account information. It's populated when the `account_type` is `us`","required":["account_number","routing_number","last_4"],"properties":{"account_number":{"type":"string","description":"The bank account number","minLength":1,"writeOnly":true},"routing_number":{"type":"string","description":"The bank routing number","minLength":9,"maxLength":9},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account_owner_type":{"description":"Type of the account ownership\n\n`individual` `business`","type":"string","enum":["individual","business"]},"first_name":{"type":"string","description":"First name of the individual account owner"},"last_name":{"type":"string","description":"Last name of the individual account owner"},"business_name":{"type":"string","description":"Business name of the business account owner"},"address":{"required":["street_line_1","country","city"],"writeOnly":true,"description":"Address of the beneficiary of this account. Required for `us` accounts.","properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the External Account","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the External Account","format":"date-time"},"active":{"readOnly":true,"type":"boolean","description":"Whether or not this External Account is active"},"beneficiary_address_valid":{"readOnly":true,"type":"boolean","description":"Whether the beneficiary address is valid. A valid beneficiary address is required for all US External Accounts"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetDeveloperFees = {"response":{"200":{"required":["default_liquidation_address_fee_percent"],"properties":{"default_liquidation_address_fee_percent":{"description":"The default fee percent that will be applied to all your Liquidation Addresses. The value is a base 100 percentage, i.e. 10.2% is \"10.2\" in the API.","type":"string","format":"float","minimum":0,"maximum":1,"exclusiveMaximum":true,"examples":["0.5"]}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetExchangeRates = {"metadata":{"allOf":[{"type":"object","properties":{"from":{"type":"string","examples":["usd"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The currency code to convert from."},"to":{"type":"string","examples":["eur"],"$schema":"http://json-schema.org/draft-04/schema#","description":"The currency code to convert to."}},"required":["from","to"]}]},"response":{"200":{"type":"object","properties":{"midmarket_rate":{"type":"string","description":"The midmarket exchange rate.","examples":["0.93425"]},"buy_rate":{"type":"string","description":"The rate for buying the target currency, including Bridge's fee.","examples":["0.9389"]},"sell_rate":{"type":"string","description":"The rate for selling the target currency, including Bridge's fee.","examples":["0.9296"]}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetKycLinks = {"response":{"200":{"title":"Kyc Links","type":"object","required":["count","data"],"properties":{"count":{"description":"total number of items in data","type":"integer"},"data":{"type":"array","minItems":0,"items":{"properties":{"id":{"type":"string","description":"ID of the KYC link"},"customer_id":{"type":"string","description":"ID of the customer. This will be nil until the customer is approved for both KYC and TOS."},"full_name":{"type":"string","description":"Full name of the customer, for a business, this would be the business entity's legal name"},"email":{"type":"string","description":"Email of the customer"},"kyc_link":{"type":"string","description":"Link to the KYC flow"},"kyc_status":{"type":"string","description":"Status of the KYC flow. `manual_review` is deprecated and getting transitioned to `under_review`. `pending` is also deprecated and getting transitioned to `not_started`.\n\n`not_started` `pending` `incomplete` `awaiting_ubo` `manual_review` `under_review` `approved` `rejected`","enum":["not_started","pending","incomplete","awaiting_ubo","manual_review","under_review","approved","rejected"]},"rejection_reasons":{"readOnly":true,"description":"Reasons why a customer KYC was rejected","type":"array","minItems":0,"items":{"description":"Reason why the kyc_status was rejected","properties":{"developer_reason":{"type":"string","description":"Developer information for why a customer was rejected. Not to be shared with the customer."},"reason":{"type":"string","description":"Reason for why a customer was rejected. To be shared with the customer."},"created_at":{"type":"string","description":"Time of creation of the rejection reason"}},"type":"object"}},"tos_link":{"type":"string","description":"Link to the TOS flow"},"tos_status":{"type":"string","description":"Status of the TOS flow\n\n`pending` `approved`","enum":["pending","approved"]},"created_at":{"type":"string","description":"Time of creation of the KYC link","format":"date-time"}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetKycLinksKyclinkid = {"metadata":{"allOf":[{"type":"object","properties":{"kycLinkID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["kycLinkID"]}]},"response":{"200":{"properties":{"id":{"type":"string","description":"ID of the KYC link"},"customer_id":{"type":"string","description":"ID of the customer. This will be nil until the customer is approved for both KYC and TOS."},"full_name":{"type":"string","description":"Full name of the customer, for a business, this would be the business entity's legal name"},"email":{"type":"string","description":"Email of the customer"},"kyc_link":{"type":"string","description":"Link to the KYC flow"},"kyc_status":{"type":"string","description":"Status of the KYC flow. `manual_review` is deprecated and getting transitioned to `under_review`. `pending` is also deprecated and getting transitioned to `not_started`.\n\n`not_started` `pending` `incomplete` `awaiting_ubo` `manual_review` `under_review` `approved` `rejected`","enum":["not_started","pending","incomplete","awaiting_ubo","manual_review","under_review","approved","rejected"]},"rejection_reasons":{"readOnly":true,"description":"Reasons why a customer KYC was rejected","type":"array","minItems":0,"items":{"description":"Reason why the kyc_status was rejected","properties":{"developer_reason":{"type":"string","description":"Developer information for why a customer was rejected. Not to be shared with the customer."},"reason":{"type":"string","description":"Reason for why a customer was rejected. To be shared with the customer."},"created_at":{"type":"string","description":"Time of creation of the rejection reason"}},"type":"object"}},"tos_link":{"type":"string","description":"Link to the TOS flow"},"tos_status":{"type":"string","description":"Status of the TOS flow\n\n`pending` `approved`","enum":["pending","approved"]},"created_at":{"type":"string","description":"Time of creation of the KYC link","format":"date-time"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetPrefundedAccounts = {"response":{"200":{"required":["id","available_balance","currency","name"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"available_balance":{"description":"Amount available for spending, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.","type":"string","readOnly":true},"currency":{"description":"currency associated with the bank account.\n\n`usd`","readOnly":true,"type":"string","enum":["usd"]},"name":{"description":"Serialized name of the account which identifies the counterparty.","type":"string","readOnly":true}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetPrefundedAccountsPrefundedaccountid = {"metadata":{"allOf":[{"type":"object","properties":{"prefundedAccountID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["prefundedAccountID"]}]},"response":{"200":{"required":["id","available_balance","currency","name"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"available_balance":{"description":"Amount available for spending, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.","type":"string","readOnly":true},"currency":{"description":"currency associated with the bank account.\n\n`usd`","readOnly":true,"type":"string","enum":["usd"]},"name":{"description":"Serialized name of the account which identifies the counterparty.","type":"string","readOnly":true}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetPrefundedAccountsPrefundedaccountidHistory = {"metadata":{"allOf":[{"type":"object","properties":{"prefundedAccountID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["prefundedAccountID"]},{"type":"object","properties":{"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The numbers of items to return (default of 10, max of 100)"},"starting_after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is a prefunded event id. If this is specified, the next page that starts with an event right AFTER the specified event id on the event timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that events older than the specified event id will be returned (shouldn't be set if ending_before is set)"},"ending_before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is a prefunded event id. If this is specified, the previous page that ends with an event right BEFORE the specified event id on the event timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that events newer than the specified event id will be returned (shouldn't be set if starting_after is set)"}},"required":[]}]},"response":{"200":{"required":["id","amount","available_balance","currency","name","type","created_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"amount":{"description":"Amount of the transaction, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.","type":"string","readOnly":true},"available_balance":{"description":"Amount available for spending, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.","type":"string","readOnly":true},"currency":{"description":"currency associated with the bank account.\n\n`usd`","readOnly":true,"type":"string","enum":["usd"]},"name":{"description":"Serialized name of the account.","type":"string","readOnly":true},"type":{"description":"The type of the transaction.\n\n`funding` `refunded transfer`","type":"string","enum":["funding","refunded transfer"],"readOnly":true},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the External Account","format":"date-time"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetStaticMemosHistory = {"metadata":{"allOf":[{"type":"object","properties":{"tx_hash":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The hash of the transaction"},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The numbers of items to return (default of 10, max of 100)"},"starting_after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is an event id. If this is specified, the next page that starts with an event right AFTER the specified event id on the event timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that events older than the specified event id will be returned (shouldn't be set if ending_before is set)"},"ending_before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is an event id. If this is specified, the previous page that ends with an event right BEFORE the specified event id on the event timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that events newer than the specified event id will be returned (shouldn't be set if starting_after is set)"},"event_type":{"type":"string","enum":["funds_received","payment_submitted","payment_processed","in_review","refund","microdeposit","account_update","deactivation","activation"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter history by event type"}},"required":[]}]},"response":{"200":{"title":"Static Memo history","type":"object","required":["count","data"],"properties":{"count":{"type":"integer","description":"The number of events returned"},"data":{"type":"array","minItems":0,"items":{"required":["id"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"type":{"type":"string","description":"The type of activity\n\n`funds_received` `payment_submitted` `payment_processed` `in_review` `refund` `account_update`","enum":["funds_received","payment_submitted","payment_processed","in_review","refund","account_update"]},"customer_id":{"description":"The id of the Bridge customer that this static memo event belongs to","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"static_memo_id":{"description":"The id of the Static Memo that this event belongs to","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"amount":{"type":"string","description":"Amount of the payin, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"currency":{"type":"string","enum":["usdc","usdt","dai","usd"],"description":"`usdc` `usdt` `dai` `usd`"},"developer_fee_amount":{"type":"string","description":"Amount of the developer fee if any, represented as a dollar denominated string. This is the final amount taken out of what is ultimately received by your customer, not a percentage. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"exchange_fee_amount":{"type":"string","description":"Amount of the exchange fee if any, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"subtotal_amount":{"type":"string","description":"Amount of the subtotal, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"gas_fee":{"type":"string","description":"Amount of the gas fee if any, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"deposit_id":{"type":"string","description":"The id of the deposit related to this event. This id can be used to link multiple events to the same transaction"},"destination_tx_hash":{"type":"string","description":"The hash of the on-chain transfer to the destination address"},"source_deposit_instructions":{"required":["deposit_message"],"properties":{"deposit_message":{"description":"The message that the customer MUST include in their wire memo/message or ach push description","type":"string"}},"type":"object"},"source":{"required":["payment_rail"],"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"bank_beneficiary_name":{"description":"(Wire only) The name of the beneficiary of the bank account that the customer sent the deposit to","type":"string"},"bank_routing_number":{"description":"(Wire only) The routing number of the bank that the customer sent the deposit to","type":"string"},"bank_name":{"description":"(Wire only) The name of the bank that the customer sent the deposit to","type":"string"},"imad":{"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"omad":{"description":"The OMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"description":{"description":"(ACH only) The description of the deposit that the customer sent","type":"string"}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the event","format":"date-time"}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetTransfers = {"metadata":{"allOf":[{"type":"object","properties":{"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The numbers of items to return (default of 10, max of 100)"},"starting_after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is a transfer id. If this is specified, the next page that starts with a transfer right AFTER the specified transfer id on the transfer timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that transfers older than the specified transfer id will be returned (shouldn't be set if ending_before is set)"},"ending_before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is a transfer id. If this is specified, the previous page that ends with a transfer right BEFORE the specified transfer id on the transfer timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that transfers newer than the specified transfer id will be returned (shouldn't be set if starting_after is set)"},"tx_hash":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The hash of the transaction"},"updated_after_ms":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"This is a unix timestamp in milliseconds. If this is specified, transfers updated AFTER the specified timestamp will be returned"},"updated_before_ms":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"This is a unix timestamp in milliseconds. If this is specified, transfers updated BEFORE the specified timestamp will be returned"}},"required":[]}]},"response":{"200":{"title":"Transfers","type":"object","required":["count","data"],"properties":{"count":{"type":"integer","description":"The number of transfers returned"},"data":{"type":"array","minItems":0,"items":{"required":["id","amount","developer_fee","currency","on_behalf_of","source","destination","state","receipt","created_at","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"client_reference_id":{"description":"A client-provided reference ID that uniquely identifies a resource in the client's system","type":"string","minLength":1,"maxLength":256},"amount":{"description":"Amount of the transfer, expressed as a decimal string.  Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt is denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged.","type":"string"},"currency":{"description":"Fiat currency for the transfer amount and developer fee. It's the source currency if that is a fiat currency or the fiat currency to which the source currency is pegged.\n\n`usd` `eur`","type":"string","enum":["usd","eur"]},"on_behalf_of":{"description":"The id of the Bridge customer that you are moving funds on behalf of.","type":"string"},"developer_fee":{"description":"The fee, expressed as a decimal string, represents the amount you wish to reserve for your own account. This fee is the final amount deducted from what your customer ultimately receives, rather than a percentage.\n\nIt is denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged.","type":"string"},"source":{"description":"The source of the transfer, which could be an external bank account, a bridge account, or a crypto wallet address","required":["currency","payment_rail"],"properties":{"currency":{"description":"The source currency\n\n`usdc` `usdt` `dai` `usd` `eur`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"payment_rail":{"description":"The source payment rail\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `sepa` `solana` `stellar` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"external_account_id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"omad":{"readOnly":true,"description":"The OMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"imad":{"readOnly":true,"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"bank_beneficiary_name":{"description":"(Wire only) The name of the beneficiary of the bank account that the customer sent the deposit to","type":"string","readOnly":true},"bank_routing_number":{"description":"(Wire only) The routing number of the bank that the customer sent the deposit to","type":"string","readOnly":true},"bank_name":{"description":"(Wire only) The name of the bank that the customer sent the deposit to","type":"string","readOnly":true},"description":{"description":"(ACH only) The description of the deposit that the customer sent","type":"string","readOnly":true},"from_address":{"description":"The crypto wallet address that the customer will send funds from, in order to kick off this transfer","type":"string"}},"type":"object"},"destination":{"description":"The destination of the transfer, which could be an external bank account, a bridge account, or a crypto wallet address","required":["currency","payment_rail"],"properties":{"currency":{"description":"The destination currency\n\n`usdc` `usdt` `dai` `usd` `eur`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"payment_rail":{"description":"The destination payment rail\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `sepa` `solana` `stellar` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"external_account_id":{"description":"External bank account Bridge should send the funds to. The currency associated with the External Account must match the destination currency.","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"omad":{"readOnly":true,"description":"The OMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"imad":{"readOnly":true,"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"trace_number":{"readOnly":true,"description":"The trace number of an ACH transfer","type":"string","pattern":"[0-9]","minLength":15,"maxLength":15},"wire_message":{"description":"A message to be sent with a wire transfer, only allowed when the payment rail is a wire.  This message will be validated against 4 lines, each with a max length of 35 char according to the Fedwire standard.","type":"string","minLength":1,"maxLength":256},"sepa_reference":{"description":"A reference message to be sent with a SEPA transaction. It must be from 6 to 140 characters. The allowed characters are `a-z`, `A-Z`, `0-9`, spaces, ampersand (`&`), hyphen (`-`), full stop (`.`), and solidus (`/`).","type":"string","minLength":6,"maxLength":140},"swift_reference":{"description":"A payment reference message or remittance information to be included in a SWIFT transaction. It can have at most 4 lines (separated by \"\\n\"), each line with a max length of 35 chars. The allowed characters are `a-z`, `A-Z`, `0-9`, special characters (`/` `-` `?` `:` `(` `)` `.` `,` `'` `+`), and space","type":"string","minLength":1,"maxLength":256},"to_address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at, in order to complete this transfer","type":"string"},"blockchain_memo":{"description":"A message to be sent with a crypto transaction, only allowed when the payment rail is Stellar.","type":"string"}},"type":"object"},"state":{"description":"Status of the transfer. See [Transfer States](https://apidocs.bridge.xyz/docs/transfers-1#transfer-states) for more details.\n\n`awaiting_funds` `in_review` `funds_received` `payment_submitted` `payment_processed` `canceled` `error` `returned` `refunded`","readOnly":true,"type":"string","enum":["awaiting_funds","in_review","funds_received","payment_submitted","payment_processed","canceled","error","returned","refunded"]},"source_deposit_instructions":{"readOnly":true,"description":"Some transfers require a deposit to be made by the customer before Bridge can start the process.  Instructions for how to kick off the transfer will be included here.  The deposit must match these instructions exactly, or the transfer will fail.","required":["payment_rail","amount","currency"],"properties":{"payment_rail":{"description":"The source payment rail\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar` `sepa` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar","sepa","swift"]},"amount":{"description":"Amount of the deposit, expressed as a decimal string. It's denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.","type":"string"},"currency":{"type":"string","enum":["usdc","usdt","dai","usd","eur"],"description":"The source currency\n\n`usdc` `usdt` `dai` `usd` `eur`"},"from_address":{"description":"The crypto wallet address that the customer will send funds from, in order to kick off this transfer","type":"string"},"to_address":{"description":"The crypto wallet address the customer will send funds to in order to initiate the payment processing","type":"string"},"deposit_message":{"description":"The message that the customer MUST include in their `wire memo/message`, `ach push description`, `sepa reference`, or `swift reference/remittance information`.","type":"string"},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string"},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string"},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string"},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string"},"bank_beneficiary_name":{"description":"The name of the beneficiary of the bank account that the customer should send the deposit to","type":"string"}},"type":"object"},"receipt":{"description":"Receipt information of a transfer","required":["initial_amount","developer_fee","exchange_fee","subtotal_amount"],"properties":{"initial_amount":{"description":"The initial amount of the transfer, represented as a decimal string. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt's denominated in the transfer's fiat currency (see the top-level `currency` field for more info)","type":"string"},"developer_fee":{"description":"The fee, expressed as a decimal string, represents the amount you wish to reserve for your own account.  This fee is the final amount deducted from what your customer ultimately receives, rather than a percentage.\n\nIt is denominated in the transfer's fiat currency (see the top-level `currency` field for more info).","type":"string"},"exchange_fee":{"description":"The fee, expressed as a decimal string, represents the amount Bridge charges for facilitating the transfer.  This is the final amount to take out of what is ultimately received by your customer, not a percentage.\n\nIt's denominated in the transfer's fiat currency (see top-level `currency` field for more info).","type":"string"},"subtotal_amount":{"description":"The initial amount of the transfer less fixed fees (including the developer_fee and exchange_fee). Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt's denominated in the transfer's fiat currency (see top-level `currency` field for more info).","type":"string"},"remaining_prefunded_balance":{"description":"For Prefunded Accounts, this value will represent the remaining account balance after the transfer.","type":"string"},"gas_fee":{"description":"The fee, expressed as a decimal string. It's deducted from the withdrawn amount to pay for gas.  Only nonzero to crypto withdrawals that cost gas (e.g. USDT or DAI), and only known when the transaction is confirmed on-chain.  Will be missing if not yet known.\n\nIt's denominated in the fiat currency to which the destination currency is pegged.","type":"string"},"final_amount":{"description":"The final amount of the transfer, expressed as a decimal string, equal to the subtotal_amount minus any gas fees.  If the gas fee is not known, this field will be missing.  Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt's denominated in the destination currency if that is a fiat currency or the fiat currency to which the destination currency is pegged.","type":"string"},"source_tx_hash":{"description":"The hash of the on-chain deposit to the source address, where applicable"},"destination_tx_hash":{"description":"The hash of the on-chain transfer to the destination address, where applicable"},"exchange_rate":{"description":"The effective exchange rate can be calculated by dividing the converted amount by the amount available for conversion after deducting the developer fee. This rate includes a currency conversion spread and is subject to a rounding precision loss during the calculation. Currently it's populated for SEPA onramp/offramp transfers only."},"url":{"description":"The URL of a user-facing copy of the receipt.","type":"string"}},"type":"object"},"return_details":{"readOnly":true,"description":"Return information, if the transfer has been returned.","properties":{"reason":{"description":"The reason for the return, as given by the returning financial institution.","type":"string"}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the transfer","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of update of the transfer","format":"date-time"}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetTransfersTransferid = {"metadata":{"allOf":[{"type":"object","properties":{"transferID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["transferID"]}]},"response":{"200":{"required":["id","amount","developer_fee","currency","on_behalf_of","source","destination","state","receipt","created_at","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"client_reference_id":{"description":"A client-provided reference ID that uniquely identifies a resource in the client's system","type":"string","minLength":1,"maxLength":256},"amount":{"description":"Amount of the transfer, expressed as a decimal string.  Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt is denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged.","type":"string"},"currency":{"description":"Fiat currency for the transfer amount and developer fee. It's the source currency if that is a fiat currency or the fiat currency to which the source currency is pegged.\n\n`usd` `eur`","type":"string","enum":["usd","eur"]},"on_behalf_of":{"description":"The id of the Bridge customer that you are moving funds on behalf of.","type":"string"},"developer_fee":{"description":"The fee, expressed as a decimal string, represents the amount you wish to reserve for your own account. This fee is the final amount deducted from what your customer ultimately receives, rather than a percentage.\n\nIt is denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged.","type":"string"},"source":{"description":"The source of the transfer, which could be an external bank account, a bridge account, or a crypto wallet address","required":["currency","payment_rail"],"properties":{"currency":{"description":"The source currency\n\n`usdc` `usdt` `dai` `usd` `eur`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"payment_rail":{"description":"The source payment rail\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `sepa` `solana` `stellar` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"external_account_id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"omad":{"readOnly":true,"description":"The OMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"imad":{"readOnly":true,"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"bank_beneficiary_name":{"description":"(Wire only) The name of the beneficiary of the bank account that the customer sent the deposit to","type":"string","readOnly":true},"bank_routing_number":{"description":"(Wire only) The routing number of the bank that the customer sent the deposit to","type":"string","readOnly":true},"bank_name":{"description":"(Wire only) The name of the bank that the customer sent the deposit to","type":"string","readOnly":true},"description":{"description":"(ACH only) The description of the deposit that the customer sent","type":"string","readOnly":true},"from_address":{"description":"The crypto wallet address that the customer will send funds from, in order to kick off this transfer","type":"string"}},"type":"object"},"destination":{"description":"The destination of the transfer, which could be an external bank account, a bridge account, or a crypto wallet address","required":["currency","payment_rail"],"properties":{"currency":{"description":"The destination currency\n\n`usdc` `usdt` `dai` `usd` `eur`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"payment_rail":{"description":"The destination payment rail\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `sepa` `solana` `stellar` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"external_account_id":{"description":"External bank account Bridge should send the funds to. The currency associated with the External Account must match the destination currency.","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"omad":{"readOnly":true,"description":"The OMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"imad":{"readOnly":true,"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"trace_number":{"readOnly":true,"description":"The trace number of an ACH transfer","type":"string","pattern":"[0-9]","minLength":15,"maxLength":15},"wire_message":{"description":"A message to be sent with a wire transfer, only allowed when the payment rail is a wire.  This message will be validated against 4 lines, each with a max length of 35 char according to the Fedwire standard.","type":"string","minLength":1,"maxLength":256},"sepa_reference":{"description":"A reference message to be sent with a SEPA transaction. It must be from 6 to 140 characters. The allowed characters are `a-z`, `A-Z`, `0-9`, spaces, ampersand (`&`), hyphen (`-`), full stop (`.`), and solidus (`/`).","type":"string","minLength":6,"maxLength":140},"swift_reference":{"description":"A payment reference message or remittance information to be included in a SWIFT transaction. It can have at most 4 lines (separated by \"\\n\"), each line with a max length of 35 chars. The allowed characters are `a-z`, `A-Z`, `0-9`, special characters (`/` `-` `?` `:` `(` `)` `.` `,` `'` `+`), and space","type":"string","minLength":1,"maxLength":256},"to_address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at, in order to complete this transfer","type":"string"},"blockchain_memo":{"description":"A message to be sent with a crypto transaction, only allowed when the payment rail is Stellar.","type":"string"}},"type":"object"},"state":{"description":"Status of the transfer. See [Transfer States](https://apidocs.bridge.xyz/docs/transfers-1#transfer-states) for more details.\n\n`awaiting_funds` `in_review` `funds_received` `payment_submitted` `payment_processed` `canceled` `error` `returned` `refunded`","readOnly":true,"type":"string","enum":["awaiting_funds","in_review","funds_received","payment_submitted","payment_processed","canceled","error","returned","refunded"]},"source_deposit_instructions":{"readOnly":true,"description":"Some transfers require a deposit to be made by the customer before Bridge can start the process.  Instructions for how to kick off the transfer will be included here.  The deposit must match these instructions exactly, or the transfer will fail.","required":["payment_rail","amount","currency"],"properties":{"payment_rail":{"description":"The source payment rail\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar` `sepa` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar","sepa","swift"]},"amount":{"description":"Amount of the deposit, expressed as a decimal string. It's denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.","type":"string"},"currency":{"type":"string","enum":["usdc","usdt","dai","usd","eur"],"description":"The source currency\n\n`usdc` `usdt` `dai` `usd` `eur`"},"from_address":{"description":"The crypto wallet address that the customer will send funds from, in order to kick off this transfer","type":"string"},"to_address":{"description":"The crypto wallet address the customer will send funds to in order to initiate the payment processing","type":"string"},"deposit_message":{"description":"The message that the customer MUST include in their `wire memo/message`, `ach push description`, `sepa reference`, or `swift reference/remittance information`.","type":"string"},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string"},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string"},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string"},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string"},"bank_beneficiary_name":{"description":"The name of the beneficiary of the bank account that the customer should send the deposit to","type":"string"}},"type":"object"},"receipt":{"description":"Receipt information of a transfer","required":["initial_amount","developer_fee","exchange_fee","subtotal_amount"],"properties":{"initial_amount":{"description":"The initial amount of the transfer, represented as a decimal string. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt's denominated in the transfer's fiat currency (see the top-level `currency` field for more info)","type":"string"},"developer_fee":{"description":"The fee, expressed as a decimal string, represents the amount you wish to reserve for your own account.  This fee is the final amount deducted from what your customer ultimately receives, rather than a percentage.\n\nIt is denominated in the transfer's fiat currency (see the top-level `currency` field for more info).","type":"string"},"exchange_fee":{"description":"The fee, expressed as a decimal string, represents the amount Bridge charges for facilitating the transfer.  This is the final amount to take out of what is ultimately received by your customer, not a percentage.\n\nIt's denominated in the transfer's fiat currency (see top-level `currency` field for more info).","type":"string"},"subtotal_amount":{"description":"The initial amount of the transfer less fixed fees (including the developer_fee and exchange_fee). Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt's denominated in the transfer's fiat currency (see top-level `currency` field for more info).","type":"string"},"remaining_prefunded_balance":{"description":"For Prefunded Accounts, this value will represent the remaining account balance after the transfer.","type":"string"},"gas_fee":{"description":"The fee, expressed as a decimal string. It's deducted from the withdrawn amount to pay for gas.  Only nonzero to crypto withdrawals that cost gas (e.g. USDT or DAI), and only known when the transaction is confirmed on-chain.  Will be missing if not yet known.\n\nIt's denominated in the fiat currency to which the destination currency is pegged.","type":"string"},"final_amount":{"description":"The final amount of the transfer, expressed as a decimal string, equal to the subtotal_amount minus any gas fees.  If the gas fee is not known, this field will be missing.  Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt's denominated in the destination currency if that is a fiat currency or the fiat currency to which the destination currency is pegged.","type":"string"},"source_tx_hash":{"description":"The hash of the on-chain deposit to the source address, where applicable"},"destination_tx_hash":{"description":"The hash of the on-chain transfer to the destination address, where applicable"},"exchange_rate":{"description":"The effective exchange rate can be calculated by dividing the converted amount by the amount available for conversion after deducting the developer fee. This rate includes a currency conversion spread and is subject to a rounding precision loss during the calculation. Currently it's populated for SEPA onramp/offramp transfers only."},"url":{"description":"The URL of a user-facing copy of the receipt.","type":"string"}},"type":"object"},"return_details":{"readOnly":true,"description":"Return information, if the transfer has been returned.","properties":{"reason":{"description":"The reason for the return, as given by the returning financial institution.","type":"string"}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the transfer","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of update of the transfer","format":"date-time"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetVirtualAccountsHistory = {"metadata":{"allOf":[{"type":"object","properties":{"tx_hash":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The hash of the transaction"},"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The numbers of items to return (default of 10, max of 100)"},"starting_after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is an event id. If this is specified, the next page that starts with an event right AFTER the specified event id on the event timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that events older than the specified event id will be returned (shouldn't be set if ending_before is set)"},"ending_before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"This is an event id. If this is specified, the previous page that ends with an event right BEFORE the specified event id on the event timeline, which is always ordered from the newest to the oldest by creation time, will be returned. This also implies that events newer than the specified event id will be returned (shouldn't be set if starting_after is set)"},"event_type":{"type":"string","enum":["funds_received","payment_submitted","payment_processed","in_review","refund","microdeposit","account_update","deactivation","activation"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Filter history by event type"}},"required":[]}]},"response":{"200":{"title":"Virtual Account history","type":"object","required":["count","data"],"properties":{"count":{"type":"integer","description":"The number of events returned"},"data":{"type":"array","minItems":0,"items":{"required":["id"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"type":{"type":"string","description":"The type of activity\n\n`funds_received` `payment_submitted` `payment_processed` `in_review` `refund` `microdeposit` `account_update` `deactivation` `activation`","enum":["funds_received","payment_submitted","payment_processed","in_review","refund","microdeposit","account_update","deactivation","activation"]},"customer_id":{"description":"The id of the Bridge customer that this Virtual Account event belongs to","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"virtual_account_id":{"description":"The id of the Virtual Account that this Virtual Account event belongs to","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"amount":{"type":"string","description":"Amount of the payin, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"currency":{"type":"string","enum":["usdc","usdt","dai","usd"],"description":"`usdc` `usdt` `dai` `usd`"},"developer_fee_amount":{"type":"string","description":"Amount of the developer fee if any, represented as a dollar denominated string. This is the final amount taken out of what is ultimately received by your customer, not a percentage. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"exchange_fee_amount":{"type":"string","description":"Amount of the exchange fee if any, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"subtotal_amount":{"type":"string","description":"Amount of the subtotal, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"gas_fee":{"type":"string","description":"Amount of the gas fee if any, represented as a dollar denominated string. Examples include \"100.25\", \"0.1\", \"1.234567\" etc."},"deposit_id":{"type":"string","description":"The id of the deposit related to this event. This id can be used to link multiple events to the same transaction"},"destination_tx_hash":{"type":"string","description":"The hash of the on-chain transfer to the destination address"},"source":{"required":["payment_rail"],"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"description":{"description":"(ACH only) The description of the deposit that the customer sent","type":"string","readOnly":true},"sender_name":{"description":"(ACH only) The name of the business or individual who initiated the ACH","type":"string","readOnly":true},"sender_bank_routing_number":{"description":"(ACH only) The routing number of the entity that initiated this ACH transaction","type":"string","readOnly":true},"trace_number":{"description":"(ACH only) The unique, a 15-digit number associated with each ACH transaction that is used for tracking and reconciling transactions","type":"string","readOnly":true},"bank_routing_number":{"description":"(Wire only) The routing number of the bank that sent the wire to the Virtual Account","type":"string","readOnly":true},"bank_name":{"description":"(Wire only) The name of the bank that sent the wire","type":"string","readOnly":true},"bank_beneficiary_name":{"description":"(Wire only) The name of the beneficiary of the bank account that the customer sent the deposit to","type":"string","readOnly":true},"imad":{"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40,"readOnly":true}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the event","format":"date-time"}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetWebhooks = {"response":{"200":{"title":"Webhooks","type":"object","required":["data"],"properties":{"data":{"type":"array","minItems":0,"items":{"required":["id","url","status","public_key"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"url":{"type":"string","description":"The URL that the webhook will send events to"},"status":{"type":"string","description":"The status of the webhook. Only active webhooks will receive events automatically.\n\n`active` `disabled` `deleted`","enum":["active","disabled","deleted"]},"public_key":{"type":"string","description":"The public key (in PEM format) that should be used to verify the authenticity of webhook events"}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetWebhooksWebhookidEvents = {"metadata":{"allOf":[{"type":"object","properties":{"webhookID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["webhookID"]}]},"response":{"200":{"title":"Webhook Events","type":"object","required":["data"],"properties":{"data":{"type":"array","minItems":0,"items":{"required":["api_version","event_id","event_category","event_type","event_object_id","event_object","event_object_changes","event_created_at"],"properties":{"api_version":{"type":"string","readOnly":true},"event_id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"event_sequence":{"type":"integer","readOnly":true},"event_category":{"type":"string","enum":["customer","external_account","kyc_link","liquidation_address","liquidation_address.drain","static_memo","transfer","virtual_account","virtual_account.activity"],"description":"`customer` `external_account` `kyc_link` `liquidation_address` `liquidation_address.drain` `static_memo` `transfer` `virtual_account` `virtual_account.activity`"},"event_type":{"type":"string","description":"The values here will be prefixed with the event_category. For example, a customer created event will be `customer.created`\n\n`created` `updated` `updated.status_transitioned` `deleted` `canceled`","enum":["created","updated","updated.status_transitioned","deleted","canceled"]},"event_object_id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"event_object_status":{"type":"string","readOnly":true,"enum":["not_started","incomplete","active","rejected","under_review","manual_review","awaiting_ubo","approved","awaiting_funds","funds_received","payment_submitted","payment_processed","in_review","canceled","error","returned","refunded","undeliverable"],"description":"`not_started` `incomplete` `active` `rejected` `under_review` `manual_review` `awaiting_ubo` `approved` `awaiting_funds` `funds_received` `payment_submitted` `payment_processed` `in_review` `canceled` `error` `returned` `refunded` `undeliverable`"},"event_object":{"type":"object","description":"The object that was affected by the event","readOnly":true,"additionalProperties":true},"event_object_changes":{"type":"object","description":"The changes that were made to the object","readOnly":true,"additionalProperties":true},"event_created_at":{"type":"string","format":"date-time","readOnly":true}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetWebhooksWebhookidLogs = {"metadata":{"allOf":[{"type":"object","properties":{"webhookID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["webhookID"]}]},"response":{"200":{"title":"Delivery Logs","type":"object","required":["count","data"],"properties":{"count":{"type":"integer","description":"The number of logs returned"},"data":{"type":"array","minItems":0,"items":{"required":["status","event_id","response_body","created_at"],"properties":{"status":{"type":"integer","description":"The status code of the delivery"},"event_id":{"description":"The id of the event for the delivery","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"response_body":{"type":"string","description":"The response body of the delivery"},"created_at":{"type":"string","format":"date-time","description":"The time of the delivery"}},"type":"object"}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostCustomers = {"body":{"oneOf":[{"title":"Individual Customer","required":["type","signed_agreement_id","first_name","last_name","email","address","tax_identification_number","birth_date"],"properties":{"type":{"description":"Type of the customer (individual vs. business).","type":"string","minLength":1,"enum":["individual"]},"first_name":{"type":"string","minLength":1,"maxLength":256},"last_name":{"type":"string","minLength":1,"maxLength":256},"email":{"type":"string","minLength":1,"maxLength":512},"phone":{"description":"Phone in format \"+12223334444\"","type":"string","minLength":1,"maxLength":256},"address":{"writeOnly":true,"required":["street_line_1","country","city"],"properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"type":"object"},"birth_date":{"writeOnly":true,"type":"string","description":"Date of birth in format yyyy-mm-dd","minLength":10,"maxLength":10},"tax_identification_number":{"description":"For individual US customers, SSN should be used. For non-US individual customers, a national ID is preferred where applicable; however, a tax ID can also be used as an alternative.","writeOnly":true,"type":"string"},"signed_agreement_id":{"writeOnly":true,"type":"string","description":"ID of the signed agreement, fetched through the Bridge UI","minLength":1,"maxLength":256},"gov_id_country":{"writeOnly":true,"type":"string","description":"Three-letter alpha-3 country code of the provided government id as defined in the ISO 3166-1 spec.","minLength":3,"maxLength":3},"gov_id_image_front":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the front of the customer's government issued ID \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":256},"gov_id_image_back":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the back of the customer's government issued ID \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":256},"proof_of_address_document":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the *Proof-of-Address* document \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif.\nRequired for new customers from the European Economic Area (EEA), including associated principalities and territories. Please refer to [SEPA/Euro services](https://apidocs.bridge.xyz/docs/sepa-euro-transactions) for more details. Utility bills and bank statements are recommended for proof of address.","minLength":1,"maxLength":256},"endorsements":{"writeOnly":true,"type":"array","description":"List of endorsements to request for this customer. If omitted, we'll attempt to grant `base` and `sepa`. N.B. If `sepa` is explicitly requested, `individual` customers will be prompted (and required) to provide proof of address in the hosted KYC flow.","items":{"enum":["base","sepa"]}},"sof_eu_questionnaire":{"writeOnly":true,"type":"object","required":["acting_as_intermediary","employment_status","expected_monthly_payments","most_recent_occupation","primary_purpose","source_of_funds"],"properties":{"acting_as_intermediary":{"type":"string","description":"Is the customer acting as an intermediary for a third party?","enum":["yes","no"]},"employment_status":{"type":"string","description":"What is the customer's current employment status?","enum":["employed","homemaker","retired","self_employed","student","unemployed"]},"expected_monthly_payments":{"type":"string","description":"What is the expected monthly volume of payments the customer will be sending or receiving?","enum":["0_4999","5000_9999","10000_49999","50000_plus"]},"most_recent_occupation":{"type":"string","description":"What is the customer's most recent occupation? Specify the relevant alphanumeric occupation code. See the [list of occupations](https://dash.readme.com/project/bridge-docs/v0/page/sof-eu-most-recent-occupation-list) for the complete list of valid occupations and codes."},"primary_purpose":{"type":"string","description":"What is the primary purpose of the customer's account?","enum":["business_transactions","charitable_donations","investment_purposes","other","payments_to_friends_or_family_abroad","personal_or_living_expenses","protect_wealth","purchase_goods_and_services"]},"primary_purpose_other":{"type":"string","description":"Required if the primary purpose is 'other'."},"source_of_funds":{"type":"string","description":"What is the source of funds for the customer's account?","enum":["business_income","gambling_proceeds","gifts","government_benefits","inheritance","investments_loans","pension_retirement","salary","sale_of_assets_real_estate","savings","someone_elses_funds"]}}}},"type":"object"},{"title":"Business Customer (Beta)","required":["type","name","description","email","business_type","source_of_funds","website","address","tax_identification_number","signed_agreement_id","is_dao","transmits_customer_funds","compliance_screening_explanation","ultimate_beneficial_owners","formation_document","ownership_document"],"properties":{"type":{"description":"Type of the customer (individual vs. business)","type":"string","minLength":1,"enum":["business"]},"name":{"type":"string","minLength":1,"maxLength":256},"description":{"type":"string","minLength":1,"maxLength":512},"email":{"type":"string","minLength":1,"maxLength":512},"source_of_funds":{"description":"The source of funds for the business, e.g. profits, income, venture capital, etc.","type":"string","minLength":1,"maxLength":255},"business_type":{"description":"The type of business structure that most closely matches the business customer","type":"string","minLength":1,"enum":["cooperative","corporation","llc","other","partnership","sole_prop","trust"]},"website":{"type":"string","minLength":1,"maxLength":256},"address":{"writeOnly":true,"required":["street_line_1","country","city"],"properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"type":"object"},"tax_identification_number":{"description":"For business US customers, TIN should be used. For non-US business customers, a national ID is preferred where applicable; however, a tax ID can also be used as an alternative.","writeOnly":true,"type":"string"},"signed_agreement_id":{"writeOnly":true,"type":"string","description":"Required ID of the signed agreement, fetched through the Bridge UI","minLength":1,"maxLength":256},"statement_of_funds":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the *Statement of Funds* document following the data-uri scheme i.e. data:image/[type];base64,[base_64_encoded_file_contents] \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .","minLength":1,"maxLength":512},"is_dao":{"type":"boolean","description":"Whether the business is a DAO (Decentralized Autonomous Organization)"},"transmits_customer_funds":{"type":"boolean","description":"True if the business transmits funds on behalf of its customers"},"compliance_screening_explanation":{"type":"string","description":"Required if transmits_customer_funds is true. An explanation of types of compliance screening (KYC, KYB, or AML) the customer performs before transmitting funds on behalf of its customers.","minLength":1,"maxLength":512},"ultimate_beneficial_owners":{"type":"array","description":"List of ultimate beneficial owners","items":{"required":["first_name","last_name","birth_date","email","phone","tax_identification_number","address","gov_id_image_front"],"properties":{"first_name":{"type":"string","minLength":1,"maxLength":256},"middle_name":{"type":"string","minLength":1,"maxLength":256},"last_name":{"type":"string","minLength":1,"maxLength":256},"birth_date":{"type":"string","description":"Date of birth in format yyyy-mm-dd","minLength":10,"maxLength":10},"email":{"type":"string","minLength":1,"maxLength":512},"phone":{"type":"string","minLength":1,"maxLength":256},"tax_identification_number":{"type":"string","description":"For US owners, SSN should be used. For non-US individual owners, a national ID is preferred where applicable; however, a tax ID can also be used as an alternative."},"address":{"required":["street_line_1","country","city"],"properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"type":"object"},"gov_id_country":{"type":"string","description":"Three-letter alpha-3 country code of the submitted government id as defined in the ISO 3166-1 spec.","minLength":3,"maxLength":3},"gov_id_image_front":{"type":"string","description":"Base64 encoded image* of the front of the beneficial owner's government ID, following the data-uri scheme i.e. data:image/[type];base64,[base_64_encoded_file_contents] \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":256},"gov_id_image_back":{"type":"string","description":"Base64 encoded image* of the back of the beneficial owner's government ID, following the data-uri scheme i.e. data:image/[type];base64,[base_64_encoded_file_contents] \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":256},"proof_of_address_document":{"type":"string","description":"Base64 encoded image* of a proof of address document for the beneficial owner, following the data-uri scheme i.e. data:image/[type];base64,[base_64_encoded_file_contents] \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":256}},"type":"object"}},"formation_document":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the *Formation Document* following the data-uri scheme i.e. data:image/[type];base64,[base_64_encoded_file_contents] \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":512},"ownership_document":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the *Ownership Document* following the data-uri scheme i.e. data:image/[type];base64,[base_64_encoded_file_contents] \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":512},"proof_of_address_document":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the *Proof-of-Address* document \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif.\nRequired for new customers from the European Economic Area (EEA), including associated principalities and territories. Please refer to [SEPA/Euro services](https://apidocs.bridge.xyz/docs/sepa-euro-transactions) for more details. Utility bills and bank statements are recommended for proof of address.","minLength":1,"maxLength":512},"endorsements":{"writeOnly":true,"type":"array","description":"List of endorsements to request for this customer. If omitted, we'll attempt to grant `base` and `sepa`.","items":{"enum":["base","sepa"]}},"sof_eu_questionnaire":{"writeOnly":true,"type":"object","title":"Business Customer Source of Funds (SOF) / Expected Usage (EU) Questionnaire","required":["estimated_annual_revenue_usd","expected_monthly_payments_usd","operates_in_prohibited_countries","primary_purpose","high_risk_activities","source_of_funds","source_of_funds_description","transmits_customer_funds"],"properties":{"estimated_annual_revenue_usd":{"type":"string","description":"Estimated annual revenue in USD","enum":[99999,100000999999,10000009999999,1000000049999999,"50000000_24999999\"","250000000_plus"]},"expected_monthly_payments_usd":{"type":"integer","description":"Expected monthly payments in USD"},"operates_in_prohibited_countries":{"type":"string","description":"Does the business operate in any prohibited countries?","enum":["yes","no"]},"primary_purpose":{"type":"string","description":"What is the primary purpose of the business account?","enum":["business_transactions","charitable_donations","investment_purposes","other","payments_to_friends_or_family_abroad","payroll","personal_or_living_expenses","protect_wealth","purchase_goods_and_services","receive_payment_for_goods_and_services","tax_optimization"]},"primary_purpose_other":{"type":"string","description":"Required if the primary purpose is 'other'."},"high_risk_activities":{"type":"array","description":"List of high-risk activities the business is involved in.","items":{"type":"string","enum":["none_of_the_above","adult_entertainment","gambling","hold_client_funds","investment_services","lending_banking","marijuana_or_related_services","money_services","operate_foreign_exchange_virtual_currencies_brokerage_otc","safe_deposit_box_rentals","third_party_payment_processing","weapons_firearms_and_explosives"]}},"source_of_funds":{"type":"string","description":"What is the source of funds for the business account?","enum":["business_loans","business_revenue","equity_funding","grants","investment_proceeds","legal_settlement_tax_refund","pension_retirement","sale_of_assets","third_party_funds"]},"source_of_funds_description":{"type":"string","description":"Description of the source of funds for the business' account."},"transmits_customer_funds":{"type":"string","description":"Does the business transmit funds on behalf of its customers?","enum":["yes","no"]},"transmits_customer_funds_description":{"type":"string","description":"If the business transmits funds on behalf of its customers, please elaborate here."}}}},"type":"object"}],"discriminator":{"propertyName":"type","mapping":{"individual":"#/components/schemas/CreateIndividualCustomerPayload","business":"#/components/schemas/CreateBusinessCustomerPayload"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"Idempotency-Key":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"201":{"properties":{"id":{"readOnly":true,"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"first_name":{"type":"string","minLength":1,"maxLength":256},"last_name":{"type":"string","minLength":1,"maxLength":256},"email":{"type":"string","minLength":1,"maxLength":512},"status":{"type":"string","description":"Status of the customer. `manual_review` is deprecated and getting transitioned to `under_review`. `pending` is also deprecated and getting transitioned to `not_started`.\n\n`not_started` `pending` `incomplete` `awaiting_ubo` `manual_review` `under_review` `active` `rejected`","enum":["not_started","pending","incomplete","awaiting_ubo","manual_review","under_review","active","rejected"]},"capabilities":{"type":"object","properties":{"payin_crypto":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payout_crypto":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payin_fiat":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payout_fiat":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]}}},"future_requirements_due":{"readOnly":true,"description":"Information about requirements that may be needed in the future for the customer (eg. enhanced KYC checks for high volume transactions etc.). Please consult our KYC guide on how to resolve each requirement.","type":"array","minItems":0,"items":{"type":"string","enum":["id_verification"],"description":"`id_verification`"}},"requirements_due":{"readOnly":true,"description":"KYC requirements still needed to be completed. Please consult our KYC guide on how to resolve each requirement.","type":"array","minItems":0,"items":{"type":"string","enum":["external_account","id_verification"],"description":"`external_account` `id_verification`"}},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the customer","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the customer","format":"date-time"},"rejection_reasons":{"readOnly":true,"description":"Reasons why a customer KYC was rejected","type":"array","minItems":0,"items":{"description":"Reason why the kyc_status was rejected","properties":{"developer_reason":{"type":"string","description":"Developer information for why a customer was rejected. Not to be shared with the customer."},"reason":{"type":"string","description":"Reason for why a customer was rejected. To be shared with the customer."},"created_at":{"type":"string","description":"Time of creation of the rejection reason"}},"type":"object"}},"has_accepted_terms_of_service":{"readOnly":true,"description":"Whether the customer has accepted the terms of service.","type":"boolean"},"endorsements":{"readOnly":true,"description":"A summary of whether the customer has received approvals to complete onboarding or use certain products/services offered by Bridge.","type":"array","minItems":0,"items":{"required":["name","status"],"properties":{"name":{"description":"The endorsement type.\n\n`base` `sepa`","type":"string","enum":["base","sepa"]},"status":{"type":"string","enum":["incomplete","approved","revoked"],"description":"`incomplete` `approved` `revoked`"},"additional_requirements":{"description":"Additional requirements that need to be completed for obtaining the approval for the endorsement. \n\n1. `kyc_approval` and `tos_acceptance` are required for the `base` endorsement. \n2. `kyc_with_proof_of_address` and `tos_v2_acceptance` are required for `sepa`. If `tos_v2_acceptance` is not completed, a ToS acceptance link can be retrieved for the current customer from the endpoint `/v0/customers/{customerID}/tos_acceptance_link`. To fulfill the `kyc_with_proof_of_address` requirement, a KYC link can be specifically requested for the current customer via the endpoint `/v0/customers/{customerID}/kyc_link`, with `endorsement=sepa` included in the query string","type":"array","minItems":0,"items":{"type":"string","enum":["kyc_approval","tos_acceptance","kyc_with_proof_of_address","tos_v2_acceptance"],"description":"`kyc_approval` `tos_acceptance` `kyc_with_proof_of_address` `tos_v2_acceptance`"}}},"type":"object"}}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostCustomersCustomeridExternalAccounts = {"body":{"required":["account_owner_name","id"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"customer_id":{"description":"The id of the Bridge customer that this External Account belongs to","type":"string","minLength":1,"readOnly":true},"currency":{"description":"Currency associated with the bank account. Default is `usd`. When `eur` is specified, the account type must be `iban`","type":"string","enum":["usd","eur"]},"bank_name":{"description":"Bank name of the account (e.g. \"Chase\")","type":"string","minLength":1,"maxLength":256},"account_owner_name":{"description":"Owner of the account Bank Account (e.g. \"John Doe\")","type":"string","minLength":1,"maxLength":256},"last_4":{"description":"Last 4 digits of the bank account number for `us` account type. This field is getting deprecated in favor of the `account.last_4` field","type":"string","minLength":1,"readOnly":true},"account_number":{"writeOnly":true,"description":"Account number of your bank account. This field is getting deprecated in favor of the `account.account_number` field for US accounts.","type":"string","minLength":12},"routing_number":{"writeOnly":true,"description":"Routing number of your bank account. This field is getting deprecated in favor of the `account.routing_number` field for US accounts.","type":"string","minLength":9},"account_type":{"description":"Type of the bank account. The default is `us`","type":"string","enum":["us","iban"]},"iban":{"description":"IBAN bank account information. Required when the `account_type` is `iban`.","required":["account_number","bic","country","last_4"],"properties":{"account_number":{"type":"string","description":"The International Bank Account Number (IBAN) that will be used to send the funds","minLength":1,"writeOnly":true},"bic":{"type":"string","description":"The Business Identifier Code (BIC) that will be used to send the funds","minLength":1},"country":{"description":"Country in which the bank account is located. It's a three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account":{"description":"US bank account information. Required when the `account_type` is `us`. However, the top-level `account_number` and `routing_number` fields in deprecation will continue to be supported.","required":["account_number","routing_number","last_4"],"properties":{"account_number":{"type":"string","description":"The bank account number","minLength":1,"writeOnly":true},"routing_number":{"type":"string","description":"The bank routing number","minLength":9,"maxLength":9},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account_owner_type":{"description":"The type of the account ownership. Required when the `account_type` is `iban`. For `individual` ownership, `first_name` and `last_name` are required. For `business` ownership, `business_name` is required.","type":"string","enum":["individual","business"]},"first_name":{"type":"string","description":"First name of the individual account holder. Required when the `account_owner_type` is `individual`"},"last_name":{"type":"string","description":"Last name of the individual account holder. Required when the `account_owner_type` is `individual`"},"business_name":{"type":"string","description":"Business name of the business account holder. Required when the `account_owner_type` is `business`"},"address":{"required":["street_line_1","country","city"],"properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"writeOnly":true,"description":"Address of the beneficiary of this account. Required for `us` accounts.","type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the External Account","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the External Account","format":"date-time"},"active":{"readOnly":true,"type":"boolean","description":"Whether or not this External Account is active"},"beneficiary_address_valid":{"readOnly":true,"type":"boolean","description":"Whether the beneficiary address is valid. A valid beneficiary address is required for all US External Accounts"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"201":{"required":["account_owner_name","account_type","active","created_at","currency","customer_id","id","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"customer_id":{"description":"The id of the Bridge customer that this External Account belongs to","type":"string","minLength":1,"readOnly":true},"currency":{"description":"Currency associated with the bank account.\n\n`usd` `eur`","type":"string","enum":["usd","eur"]},"bank_name":{"description":"Bank name of the account (e.g. \"Chase\")","type":"string","minLength":1,"maxLength":256},"account_owner_name":{"description":"Owner of the account Bank Account (e.g. \"John Doe\")","type":"string","minLength":1,"maxLength":256},"last_4":{"description":"Last 4 digits of the bank account number for `us` account type. This field is getting deprecated in favor of the `account.last_4` field","type":"string","minLength":1,"readOnly":true},"account_number":{"writeOnly":true,"description":"Account number of your bank account. This field is getting deprecated in favor of the `account.account_number` field for US accounts.","type":"string","minLength":12},"routing_number":{"writeOnly":true,"description":"Routing number of your bank account. This field is getting deprecated in favor of the `account.routing_number` field for US accounts.","type":"string","minLength":9},"account_type":{"description":"Type of the bank account.\n\n`us` `iban`","type":"string","enum":["us","iban"]},"iban":{"description":"IBAN bank account information. It's populated when the `account_type` is `iban`.","required":["account_number","bic","country","last_4"],"properties":{"account_number":{"type":"string","description":"The International Bank Account Number (IBAN) that will be used to send the funds","minLength":1,"writeOnly":true},"bic":{"type":"string","description":"The Business Identifier Code (BIC) that will be used to send the funds","minLength":1},"country":{"description":"Country in which the bank account is located. It's a three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account":{"description":"US bank account information. It's populated when the `account_type` is `us`","required":["account_number","routing_number","last_4"],"properties":{"account_number":{"type":"string","description":"The bank account number","minLength":1,"writeOnly":true},"routing_number":{"type":"string","description":"The bank routing number","minLength":9,"maxLength":9},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account_owner_type":{"description":"Type of the account ownership\n\n`individual` `business`","type":"string","enum":["individual","business"]},"first_name":{"type":"string","description":"First name of the individual account owner"},"last_name":{"type":"string","description":"Last name of the individual account owner"},"business_name":{"type":"string","description":"Business name of the business account owner"},"address":{"required":["street_line_1","country","city"],"writeOnly":true,"description":"Address of the beneficiary of this account. Required for `us` accounts.","properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the External Account","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the External Account","format":"date-time"},"active":{"readOnly":true,"type":"boolean","description":"Whether or not this External Account is active"},"beneficiary_address_valid":{"readOnly":true,"type":"boolean","description":"Whether the beneficiary address is valid. A valid beneficiary address is required for all US External Accounts"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostCustomersCustomeridLiquidationAddresses = {"body":{"required":["currency","chain"],"properties":{"chain":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"]},"currency":{"type":"string","enum":["usdc","usdt","dai"]},"external_account_id":{"description":"External bank account to which Bridge will send the funds. The currency associated with the External Account must match the destination currency.","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"destination_wire_message":{"description":"A message to be sent with a wire transfer. It can have at most 3 lines (separated by \"\\n\"), each line with a max length of 35 chars","type":"string","minLength":1,"maxLength":256},"destination_sepa_reference":{"description":"A reference message to be sent with a SEPA transaction. It must be from 6 to 140 characters. The allowed characters are `a-z`, `A-Z`, `0-9`, spaces, ampersand (`&`), hyphen (`-`), full stop (`.`), and solidus (`/`).","type":"string","minLength":6,"maxLength":140},"destination_swift_reference":{"description":"A payment reference message or remittance information to be included in a SWIFT transaction. It can have at most 4 lines (separated by \"\\n\"), each line with a max length of 35 chars. The allowed characters are `a-z`, `A-Z`, `0-9`, special characters (`/` `-` `?` `:` `(` `)` `.` `,` `'` `+`), and space","type":"string","minLength":1,"maxLength":256},"destination_payment_rail":{"description":"The payment rail that Bridge will use to send funds to the customer. Will default to ACH if not specified.\n\nIf `sepa` is specified:\n1. the destination currency must be `eur`;\n2. the Liquidation Address currency can only be `usdc`;\n\nIf `swift` is specified:\n1. the destination currency must be `usd`;\n2. the Liquidation Address currency can only be `usdc`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"destination_currency":{"description":"The currency that Bridge will use to send funds to the customer. Will default to USD if not specified.\n\nIf `eur` is specified:\n1. the destination rail must be `sepa`;\n2. the Liquidation Address currency can only be `usdc`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"destination_address":{"type":"string","description":"The crypto wallet address that Bridge will use to send funds to the customer."},"destination_blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"},"custom_developer_fee_percent":{"description":"The developer fee percent that will be applied to this Liquidation Address or null to use the default fee. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":["string","null"],"format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]}]},"response":{"201":{"required":["chain","currency","destination_currency","destination_payment_rail"],"properties":{"chain":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"currency":{"type":"string","enum":["usdc","usdt","dai"],"description":"`usdc` `usdt` `dai`"},"external_account_id":{"description":"External bank account to which Bridge will send the funds.","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"destination_wire_message":{"description":"A message to be sent with a wire transfer.","type":"string","minLength":1,"maxLength":256},"destination_sepa_reference":{"description":"A reference message to be sent with a SEPA transaction.","type":"string","minLength":6,"maxLength":140},"destination_swift_reference":{"description":"A payment reference message or remittance information to be included in a SWIFT transaction.","type":"string","minLength":1,"maxLength":256},"destination_payment_rail":{"description":"The payment rail that Bridge will use to send funds to the customer.\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `sepa` `solana` `stellar` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"destination_currency":{"description":"The currency that Bridge will use to send funds to the customer.\n\n`usdc` `usdt` `dai` `usd` `eur`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"destination_address":{"type":"string","description":"The crypto wallet address that Bridge will use to send funds to the customer."},"destination_blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"},"custom_developer_fee_percent":{"description":"The developer fee percent that will be applied to this Liquidation Address or null to use the default fee. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":["string","null"],"format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostCustomersCustomeridPlaidLinkRequests = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"201":{"properties":{"link_token":{"type":"string","description":"Link token generated via the Plaid Link SDK"},"link_token_expires_at":{"type":"string","description":"Expiration time of the link token","format":"date-time"},"callback_url":{"type":"string","description":"URL to call through Plaid Link Flow's onSuccess callback with the public token passed in the body of the request"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostCustomersCustomeridStaticMemos = {"body":{"required":["source","destination"],"properties":{"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]},"source":{"required":["currency","payment_rail"],"properties":{"currency":{"type":"string","enum":["usd"],"examples":["usd"]},"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["wire"]}},"type":"object"},"destination":{"required":["currency","payment_rail","address"],"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"]},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"]},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]},"blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]},"source_deposit_instructions":{"readOnly":true,"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"currency":{"type":"string","enum":["usd"],"examples":["usd"],"description":"`usd`"},"deposit_message":{"description":"The message that the customer MUST include in their wire memo/message or ACH description.","type":"string","examples":["EXAMPLE_MEMO_MESSAGE"]},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string","examples":["Lead Bank"]},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string","examples":["1801 Main St., Kansas City, MO 64108"]},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string","examples":["87654321"]},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string","examples":["123456789"]},"bank_beneficiary_name":{"description":"The name of the beneficiary of the bank account that the customer should send the deposit to","type":"string","examples":["Bridge Ventures Inc"]}},"type":"object"},"destination":{"required":["currency","payment_rail","address"],"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"],"description":"`usdc` `usdt` `dai`"},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]},"blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostCustomersCustomeridVirtualAccounts = {"body":{"required":["source","destination"],"properties":{"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]},"source":{"required":["currency"],"properties":{"currency":{"type":"string","enum":["usd"],"examples":["usd"]}},"type":"object"},"destination":{"required":["currency","payment_rail","address"],"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"]},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"]},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]},"blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]},{"type":"object","properties":{"Idempotency-Key":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"status":{"description":"The activation status of the Virtual Account\n\n`activated` `deactivated`","type":"string","enum":["activated","deactivated"]},"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]},"source_deposit_instructions":{"readOnly":true,"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"deprecated":true,"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"payment_rails":{"description":"The payment rails supported by these deposit instructions","type":"array","items":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["ach_push"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"}},"currency":{"type":"string","enum":["usd"],"examples":["usd"],"description":"`usd`"},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string","examples":["Lead Bank"]},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string","examples":["1801 Main St., Kansas City, MO 64108"]},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string","examples":["87654321"]},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string","examples":["123456789"]}},"type":"object"},"destination":{"required":["currency","payment_rail","address"],"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"],"description":"`usdc` `usdt` `dai`"},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]},"blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostCustomersCustomeridVirtualAccountsVirtualaccountidDeactivate = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"virtualAccountID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","virtualAccountID"]}]},"response":{"200":{"type":"object","properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"status":{"description":"The activation status of the Virtual Account\n\n`activated` `deactivated`","type":"string","enum":["activated","deactivated"],"examples":["deactivated"]},"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]},"source_deposit_instructions":{"readOnly":true,"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"deprecated":true,"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"payment_rails":{"description":"The payment rails supported by these deposit instructions","type":"array","items":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["ach_push"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"}},"currency":{"type":"string","enum":["usd"],"examples":["usd"],"description":"`usd`"},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string","examples":["Lead Bank"]},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string","examples":["1801 Main St., Kansas City, MO 64108"]},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string","examples":["87654321"]},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string","examples":["123456789"]}},"type":"object"},"destination":{"required":["currency","payment_rail","address"],"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"],"description":"`usdc` `usdt` `dai`"},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]},"blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"}},"type":"object"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostCustomersCustomeridVirtualAccountsVirtualaccountidReactivate = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"virtualAccountID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","virtualAccountID"]}]},"response":{"200":{"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"status":{"description":"The activation status of the Virtual Account\n\n`activated` `deactivated`","type":"string","enum":["activated","deactivated"]},"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]},"source_deposit_instructions":{"readOnly":true,"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"deprecated":true,"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"payment_rails":{"description":"The payment rails supported by these deposit instructions","type":"array","items":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["ach_push"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"}},"currency":{"type":"string","enum":["usd"],"examples":["usd"],"description":"`usd`"},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string","examples":["Lead Bank"]},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string","examples":["1801 Main St., Kansas City, MO 64108"]},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string","examples":["87654321"]},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string","examples":["123456789"]}},"type":"object"},"destination":{"required":["currency","payment_rail","address"],"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"],"description":"`usdc` `usdt` `dai`"},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]},"blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostCustomersTosLinks = {"metadata":{"allOf":[{"type":"object","properties":{"Idempotency-Key":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"201":{"type":"object","required":["url"],"properties":{"url":{"type":"string","description":"A Bridge hosted URL for users to complete terms of service signing."}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostDeveloperFeeExternalAccount = {"body":{"required":["account_owner_name","id"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"customer_id":{"description":"The id of the Bridge customer that this External Account belongs to","type":"string","minLength":1,"readOnly":true},"currency":{"description":"Currency associated with the bank account. Default is `usd`. When `eur` is specified, the account type must be `iban`","type":"string","enum":["usd","eur"]},"bank_name":{"description":"Bank name of the account (e.g. \"Chase\")","type":"string","minLength":1,"maxLength":256},"account_owner_name":{"description":"Owner of the account Bank Account (e.g. \"John Doe\")","type":"string","minLength":1,"maxLength":256},"last_4":{"description":"Last 4 digits of the bank account number for `us` account type. This field is getting deprecated in favor of the `account.last_4` field","type":"string","minLength":1,"readOnly":true},"account_number":{"writeOnly":true,"description":"Account number of your bank account. This field is getting deprecated in favor of the `account.account_number` field for US accounts.","type":"string","minLength":12},"routing_number":{"writeOnly":true,"description":"Routing number of your bank account. This field is getting deprecated in favor of the `account.routing_number` field for US accounts.","type":"string","minLength":9},"account_type":{"description":"Type of the bank account. The default is `us`","type":"string","enum":["us","iban"]},"iban":{"description":"IBAN bank account information. Required when the `account_type` is `iban`.","required":["account_number","bic","country","last_4"],"properties":{"account_number":{"type":"string","description":"The International Bank Account Number (IBAN) that will be used to send the funds","minLength":1,"writeOnly":true},"bic":{"type":"string","description":"The Business Identifier Code (BIC) that will be used to send the funds","minLength":1},"country":{"description":"Country in which the bank account is located. It's a three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account":{"description":"US bank account information. Required when the `account_type` is `us`. However, the top-level `account_number` and `routing_number` fields in deprecation will continue to be supported.","required":["account_number","routing_number","last_4"],"properties":{"account_number":{"type":"string","description":"The bank account number","minLength":1,"writeOnly":true},"routing_number":{"type":"string","description":"The bank routing number","minLength":9,"maxLength":9},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account_owner_type":{"description":"The type of the account ownership. Required when the `account_type` is `iban`. For `individual` ownership, `first_name` and `last_name` are required. For `business` ownership, `business_name` is required.","type":"string","enum":["individual","business"]},"first_name":{"type":"string","description":"First name of the individual account holder. Required when the `account_owner_type` is `individual`"},"last_name":{"type":"string","description":"Last name of the individual account holder. Required when the `account_owner_type` is `individual`"},"business_name":{"type":"string","description":"Business name of the business account holder. Required when the `account_owner_type` is `business`"},"address":{"required":["street_line_1","country","city"],"properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"writeOnly":true,"description":"Address of the beneficiary of this account. Required for `us` accounts.","type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the External Account","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the External Account","format":"date-time"},"active":{"readOnly":true,"type":"boolean","description":"Whether or not this External Account is active"},"beneficiary_address_valid":{"readOnly":true,"type":"boolean","description":"Whether the beneficiary address is valid. A valid beneficiary address is required for all US External Accounts"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"Idempotency-Key":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"201":{"required":["account_owner_name","account_type","active","created_at","currency","customer_id","id","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"customer_id":{"description":"The id of the Bridge customer that this External Account belongs to","type":"string","minLength":1,"readOnly":true},"currency":{"description":"Currency associated with the bank account.\n\n`usd` `eur`","type":"string","enum":["usd","eur"]},"bank_name":{"description":"Bank name of the account (e.g. \"Chase\")","type":"string","minLength":1,"maxLength":256},"account_owner_name":{"description":"Owner of the account Bank Account (e.g. \"John Doe\")","type":"string","minLength":1,"maxLength":256},"last_4":{"description":"Last 4 digits of the bank account number for `us` account type. This field is getting deprecated in favor of the `account.last_4` field","type":"string","minLength":1,"readOnly":true},"account_number":{"writeOnly":true,"description":"Account number of your bank account. This field is getting deprecated in favor of the `account.account_number` field for US accounts.","type":"string","minLength":12},"routing_number":{"writeOnly":true,"description":"Routing number of your bank account. This field is getting deprecated in favor of the `account.routing_number` field for US accounts.","type":"string","minLength":9},"account_type":{"description":"Type of the bank account.\n\n`us` `iban`","type":"string","enum":["us","iban"]},"iban":{"description":"IBAN bank account information. It's populated when the `account_type` is `iban`.","required":["account_number","bic","country","last_4"],"properties":{"account_number":{"type":"string","description":"The International Bank Account Number (IBAN) that will be used to send the funds","minLength":1,"writeOnly":true},"bic":{"type":"string","description":"The Business Identifier Code (BIC) that will be used to send the funds","minLength":1},"country":{"description":"Country in which the bank account is located. It's a three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account":{"description":"US bank account information. It's populated when the `account_type` is `us`","required":["account_number","routing_number","last_4"],"properties":{"account_number":{"type":"string","description":"The bank account number","minLength":1,"writeOnly":true},"routing_number":{"type":"string","description":"The bank routing number","minLength":9,"maxLength":9},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account_owner_type":{"description":"Type of the account ownership\n\n`individual` `business`","type":"string","enum":["individual","business"]},"first_name":{"type":"string","description":"First name of the individual account owner"},"last_name":{"type":"string","description":"Last name of the individual account owner"},"business_name":{"type":"string","description":"Business name of the business account owner"},"address":{"required":["street_line_1","country","city"],"writeOnly":true,"description":"Address of the beneficiary of this account. Required for `us` accounts.","properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the External Account","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the External Account","format":"date-time"},"active":{"readOnly":true,"type":"boolean","description":"Whether or not this External Account is active"},"beneficiary_address_valid":{"readOnly":true,"type":"boolean","description":"Whether the beneficiary address is valid. A valid beneficiary address is required for all US External Accounts"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostDeveloperFees = {"body":{"required":["default_liquidation_address_fee_percent"],"properties":{"default_liquidation_address_fee_percent":{"description":"The default fee percent that will be applied to all your Liquidation Addresses. The value is a base 100 percentage, i.e. 10.2% is \"10.2\" in the API.","type":"string","format":"float","minimum":0,"maximum":1,"exclusiveMaximum":true,"examples":["0.5"]}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"Idempotency-Key":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostKycLinks = {"body":{"required":["full_name","email","type"],"properties":{"full_name":{"description":"Full name of the customer, for a business, this would be the business entity's legal name","type":"string","minLength":1},"email":{"description":"Email of the customer","type":"string","minLength":1},"type":{"description":"Type of the customer (individual vs. business)","type":"string","minLength":1,"enum":["individual","business"]},"endorsements":{"description":"List of endorsements to request for the generated KYC link.\nFor example, `sepa` endorsement could be requested to allow an `individual` customer to submit `proof-of-address` documents in the KYC flow.","type":"array","minItems":0,"items":{"type":"string","enum":["sepa"]}}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"Idempotency-Key":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"200":{"properties":{"id":{"type":"string","description":"ID of the KYC link"},"customer_id":{"type":"string","description":"ID of the customer. This will be nil until the customer is approved for both KYC and TOS."},"full_name":{"type":"string","description":"Full name of the customer, for a business, this would be the business entity's legal name"},"email":{"type":"string","description":"Email of the customer"},"kyc_link":{"type":"string","description":"Link to the KYC flow"},"kyc_status":{"type":"string","description":"Status of the KYC flow. `manual_review` is deprecated and getting transitioned to `under_review`. `pending` is also deprecated and getting transitioned to `not_started`.\n\n`not_started` `pending` `incomplete` `awaiting_ubo` `manual_review` `under_review` `approved` `rejected`","enum":["not_started","pending","incomplete","awaiting_ubo","manual_review","under_review","approved","rejected"]},"rejection_reasons":{"readOnly":true,"description":"Reasons why a customer KYC was rejected","type":"array","minItems":0,"items":{"description":"Reason why the kyc_status was rejected","properties":{"developer_reason":{"type":"string","description":"Developer information for why a customer was rejected. Not to be shared with the customer."},"reason":{"type":"string","description":"Reason for why a customer was rejected. To be shared with the customer."},"created_at":{"type":"string","description":"Time of creation of the rejection reason"}},"type":"object"}},"tos_link":{"type":"string","description":"Link to the TOS flow"},"tos_status":{"type":"string","description":"Status of the TOS flow\n\n`pending` `approved`","enum":["pending","approved"]},"created_at":{"type":"string","description":"Time of creation of the KYC link","format":"date-time"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostPlaidExchangePublicTokenLinkToken = {"body":{"required":["id","type"],"properties":{"public_token":{"type":"string","description":"Public token generated via the Plaid Link SDK"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"link_token":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Plaid Link token"}},"required":["link_token"]}]},"response":{"201":{"title":"Plaid public token exchanged","type":"object","properties":{"message":{"type":"string","description":"Message indicating the status of the request"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostTransfers = {"body":{"required":["amount","on_behalf_of","source","destination"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"client_reference_id":{"description":"A client-provided reference ID that uniquely identifies a resource in the client's system","type":"string","minLength":1,"maxLength":256},"amount":{"description":"Amount of the transfer, expressed as a decimal string.  Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt is denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged.","type":"string"},"on_behalf_of":{"description":"The id of the Bridge customer that you are moving funds on behalf of.","type":"string"},"developer_fee":{"description":"The fee, expressed as a decimal string, represents the amount you wish to reserve for your own account.  This fee is the final amount deducted from what your customer ultimately receives, rather than a percentage.\n\nIt is denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged.","type":"string"},"source":{"description":"The source of the transfer, which could be an external bank account, a bridge account, or a crypto wallet address","required":["currency","payment_rail"],"properties":{"currency":{"description":"When `eur` is specified as the source currency:\n  1. the source rail must be `sepa`;\n  2. only `usdc` is supported as the destination currency","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"payment_rail":{"description":"When `sepa` is specified as the source rail:\n  1. the source currency must be `eur`;\n  2. only `usdc` is supported as the destination currency;\n\nWhen `swift` is specified as the source rail:\n  1. the source currency must be `usd`;\n  2. only `usdc` is supported as the destination currency","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"external_account_id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"omad":{"readOnly":true,"description":"The OMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"imad":{"readOnly":true,"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"bank_beneficiary_name":{"description":"(Wire only) The name of the beneficiary of the bank account that the customer sent the deposit to","type":"string","readOnly":true},"bank_routing_number":{"description":"(Wire only) The routing number of the bank that the customer sent the deposit to","type":"string","readOnly":true},"bank_name":{"description":"(Wire only) The name of the bank that the customer sent the deposit to","type":"string","readOnly":true},"description":{"description":"(ACH only) The description of the deposit that the customer sent","type":"string","readOnly":true},"from_address":{"description":"The crypto wallet address that the customer will send funds from, in order to kick off this transfer","type":"string"}},"type":"object"},"destination":{"description":"The destination of the transfer, which could be an external bank account, a bridge account, or a crypto wallet address","required":["currency","payment_rail"],"properties":{"currency":{"description":"When `eur` is specified as the destination currency:\n  1. the destination rail must be `sepa`;\n  2. only `usdc` is supported as the source currency","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"payment_rail":{"description":"When `sepa` is specified as the destination rail:\n  1. the destination currency must be `eur`;\n  2. only `usdc` is supported as the source currency;\n\n When `swift` is specified as the destination rail:\n  1. the destination currency must be `usd`;\n  2. only `usdc` is supported as the source currency","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"external_account_id":{"description":"External bank account Bridge should send the funds to. The currency associated with the External Account must match the destination currency.","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"omad":{"readOnly":true,"description":"The OMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"imad":{"readOnly":true,"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"trace_number":{"readOnly":true,"description":"The trace number of an ACH transfer","type":"string","pattern":"[0-9]","minLength":15,"maxLength":15},"wire_message":{"description":"A message to be sent with a wire transfer, only allowed when the payment rail is a wire.  This message will be validated against 4 lines, each with a max length of 35 char according to the Fedwire standard.","type":"string","minLength":1,"maxLength":256},"sepa_reference":{"description":"A reference message to be sent with a SEPA transaction. It must be from 6 to 140 characters. The allowed characters are `a-z`, `A-Z`, `0-9`, spaces, ampersand (`&`), hyphen (`-`), full stop (`.`), and solidus (`/`).","type":"string","minLength":6,"maxLength":140},"swift_reference":{"description":"A payment reference message or remittance information to be included in a SWIFT transaction. It can have at most 4 lines (separated by \"\\n\"), each line with a max length of 35 chars. The allowed characters are `a-z`, `A-Z`, `0-9`, special characters (`/` `-` `?` `:` `(` `)` `.` `,` `'` `+`), and space","type":"string","minLength":1,"maxLength":256},"to_address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at, in order to complete this transfer","type":"string"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"Idempotency-Key":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"201":{"required":["id","amount","developer_fee","currency","on_behalf_of","source","destination","state","receipt","created_at","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"client_reference_id":{"description":"A client-provided reference ID that uniquely identifies a resource in the client's system","type":"string","minLength":1,"maxLength":256},"amount":{"description":"Amount of the transfer, expressed as a decimal string.  Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt is denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged.","type":"string"},"currency":{"description":"Fiat currency for the transfer amount and developer fee. It's the source currency if that is a fiat currency or the fiat currency to which the source currency is pegged.\n\n`usd` `eur`","type":"string","enum":["usd","eur"]},"on_behalf_of":{"description":"The id of the Bridge customer that you are moving funds on behalf of.","type":"string"},"developer_fee":{"description":"The fee, expressed as a decimal string, represents the amount you wish to reserve for your own account. This fee is the final amount deducted from what your customer ultimately receives, rather than a percentage.\n\nIt is denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged.","type":"string"},"source":{"description":"The source of the transfer, which could be an external bank account, a bridge account, or a crypto wallet address","required":["currency","payment_rail"],"properties":{"currency":{"description":"The source currency\n\n`usdc` `usdt` `dai` `usd` `eur`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"payment_rail":{"description":"The source payment rail\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `sepa` `solana` `stellar` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"external_account_id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"omad":{"readOnly":true,"description":"The OMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"imad":{"readOnly":true,"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"bank_beneficiary_name":{"description":"(Wire only) The name of the beneficiary of the bank account that the customer sent the deposit to","type":"string","readOnly":true},"bank_routing_number":{"description":"(Wire only) The routing number of the bank that the customer sent the deposit to","type":"string","readOnly":true},"bank_name":{"description":"(Wire only) The name of the bank that the customer sent the deposit to","type":"string","readOnly":true},"description":{"description":"(ACH only) The description of the deposit that the customer sent","type":"string","readOnly":true},"from_address":{"description":"The crypto wallet address that the customer will send funds from, in order to kick off this transfer","type":"string"}},"type":"object"},"destination":{"description":"The destination of the transfer, which could be an external bank account, a bridge account, or a crypto wallet address","required":["currency","payment_rail"],"properties":{"currency":{"description":"The destination currency\n\n`usdc` `usdt` `dai` `usd` `eur`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"payment_rail":{"description":"The destination payment rail\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `sepa` `solana` `stellar` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"external_account_id":{"description":"External bank account Bridge should send the funds to. The currency associated with the External Account must match the destination currency.","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"omad":{"readOnly":true,"description":"The OMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"imad":{"readOnly":true,"description":"The IMAD of a wire transfer","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":40},"trace_number":{"readOnly":true,"description":"The trace number of an ACH transfer","type":"string","pattern":"[0-9]","minLength":15,"maxLength":15},"wire_message":{"description":"A message to be sent with a wire transfer, only allowed when the payment rail is a wire.  This message will be validated against 4 lines, each with a max length of 35 char according to the Fedwire standard.","type":"string","minLength":1,"maxLength":256},"sepa_reference":{"description":"A reference message to be sent with a SEPA transaction. It must be from 6 to 140 characters. The allowed characters are `a-z`, `A-Z`, `0-9`, spaces, ampersand (`&`), hyphen (`-`), full stop (`.`), and solidus (`/`).","type":"string","minLength":6,"maxLength":140},"swift_reference":{"description":"A payment reference message or remittance information to be included in a SWIFT transaction. It can have at most 4 lines (separated by \"\\n\"), each line with a max length of 35 chars. The allowed characters are `a-z`, `A-Z`, `0-9`, special characters (`/` `-` `?` `:` `(` `)` `.` `,` `'` `+`), and space","type":"string","minLength":1,"maxLength":256},"to_address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at, in order to complete this transfer","type":"string"},"blockchain_memo":{"description":"A message to be sent with a crypto transaction, only allowed when the payment rail is Stellar.","type":"string"}},"type":"object"},"state":{"description":"Status of the transfer. See [Transfer States](https://apidocs.bridge.xyz/docs/transfers-1#transfer-states) for more details.\n\n`awaiting_funds` `in_review` `funds_received` `payment_submitted` `payment_processed` `canceled` `error` `returned` `refunded`","readOnly":true,"type":"string","enum":["awaiting_funds","in_review","funds_received","payment_submitted","payment_processed","canceled","error","returned","refunded"]},"source_deposit_instructions":{"readOnly":true,"description":"Some transfers require a deposit to be made by the customer before Bridge can start the process.  Instructions for how to kick off the transfer will be included here.  The deposit must match these instructions exactly, or the transfer will fail.","required":["payment_rail","amount","currency"],"properties":{"payment_rail":{"description":"The source payment rail\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar` `sepa` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar","sepa","swift"]},"amount":{"description":"Amount of the deposit, expressed as a decimal string. It's denominated in the source currency if that is a fiat currency, or in the fiat currency to which the source currency is pegged. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.","type":"string"},"currency":{"type":"string","enum":["usdc","usdt","dai","usd","eur"],"description":"The source currency\n\n`usdc` `usdt` `dai` `usd` `eur`"},"from_address":{"description":"The crypto wallet address that the customer will send funds from, in order to kick off this transfer","type":"string"},"to_address":{"description":"The crypto wallet address the customer will send funds to in order to initiate the payment processing","type":"string"},"deposit_message":{"description":"The message that the customer MUST include in their `wire memo/message`, `ach push description`, `sepa reference`, or `swift reference/remittance information`.","type":"string"},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string"},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string"},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string"},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string"},"bank_beneficiary_name":{"description":"The name of the beneficiary of the bank account that the customer should send the deposit to","type":"string"}},"type":"object"},"receipt":{"description":"Receipt information of a transfer","required":["initial_amount","developer_fee","exchange_fee","subtotal_amount"],"properties":{"initial_amount":{"description":"The initial amount of the transfer, represented as a decimal string. Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt's denominated in the transfer's fiat currency (see the top-level `currency` field for more info)","type":"string"},"developer_fee":{"description":"The fee, expressed as a decimal string, represents the amount you wish to reserve for your own account.  This fee is the final amount deducted from what your customer ultimately receives, rather than a percentage.\n\nIt is denominated in the transfer's fiat currency (see the top-level `currency` field for more info).","type":"string"},"exchange_fee":{"description":"The fee, expressed as a decimal string, represents the amount Bridge charges for facilitating the transfer.  This is the final amount to take out of what is ultimately received by your customer, not a percentage.\n\nIt's denominated in the transfer's fiat currency (see top-level `currency` field for more info).","type":"string"},"subtotal_amount":{"description":"The initial amount of the transfer less fixed fees (including the developer_fee and exchange_fee). Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt's denominated in the transfer's fiat currency (see top-level `currency` field for more info).","type":"string"},"remaining_prefunded_balance":{"description":"For Prefunded Accounts, this value will represent the remaining account balance after the transfer.","type":"string"},"gas_fee":{"description":"The fee, expressed as a decimal string. It's deducted from the withdrawn amount to pay for gas.  Only nonzero to crypto withdrawals that cost gas (e.g. USDT or DAI), and only known when the transaction is confirmed on-chain.  Will be missing if not yet known.\n\nIt's denominated in the fiat currency to which the destination currency is pegged.","type":"string"},"final_amount":{"description":"The final amount of the transfer, expressed as a decimal string, equal to the subtotal_amount minus any gas fees.  If the gas fee is not known, this field will be missing.  Examples include \"100.25\", \"0.1\", \"1.234567\", \"1.01\" etc.\n\nIt's denominated in the destination currency if that is a fiat currency or the fiat currency to which the destination currency is pegged.","type":"string"},"source_tx_hash":{"description":"The hash of the on-chain deposit to the source address, where applicable"},"destination_tx_hash":{"description":"The hash of the on-chain transfer to the destination address, where applicable"},"exchange_rate":{"description":"The effective exchange rate can be calculated by dividing the converted amount by the amount available for conversion after deducting the developer fee. This rate includes a currency conversion spread and is subject to a rounding precision loss during the calculation. Currently it's populated for SEPA onramp/offramp transfers only."},"url":{"description":"The URL of a user-facing copy of the receipt.","type":"string"}},"type":"object"},"return_details":{"readOnly":true,"description":"Return information, if the transfer has been returned.","properties":{"reason":{"description":"The reason for the return, as given by the returning financial institution.","type":"string"}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the transfer","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of update of the transfer","format":"date-time"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"403":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostWebhooks = {"body":{"required":["url","event_epoch"],"properties":{"url":{"description":"The URL that the webhook will send events to. It must use the HTTPS scheme and have a valid X.509 certificate. The URL doesn't need to be live, but the host must be reachable.","type":"string","minLength":1},"event_epoch":{"description":"Specifies the starting point from which this webhook will receive events. This should usually be set to \"webhook_creation\", unless there is a reason why this webhook needs to process events from before its creation. When this value is set to \"webhook_creation\", the webhook will receive a small number of events preceding its creation for convenience.","type":"string","enum":["webhook_creation","beginning_of_time"]}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"Idempotency-Key":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}},"required":[]}]},"response":{"201":{"required":["id","url","status","public_key"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"url":{"type":"string","description":"The URL that the webhook will send events to"},"status":{"type":"string","description":"The status of the webhook. Only active webhooks will receive events automatically.\n\n`active` `disabled` `deleted`","enum":["active","disabled","deleted"]},"public_key":{"type":"string","description":"The public key (in PEM format) that should be used to verify the authenticity of webhook events"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PostWebhooksWebhookidSend = {"body":{"properties":{"event_id":{"description":"The ID of the event that will be delivered to your endpoint","type":"string","minLength":1}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"webhookID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["webhookID"]}]},"response":{"200":{"title":"Webhook Event Sent","type":"object","required":["message"],"properties":{"message":{"type":"string","description":"Message indicating the status of the request"}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PutCustomersCustomerid = {"body":{"oneOf":[{"title":"Individual Customer","required":["type","signed_agreement_id","first_name","last_name","email","address","tax_identification_number","birth_date"],"properties":{"type":{"description":"Type of the customer (individual vs. business).","type":"string","minLength":1,"enum":["individual"]},"first_name":{"type":"string","minLength":1,"maxLength":256},"last_name":{"type":"string","minLength":1,"maxLength":256},"email":{"type":"string","minLength":1,"maxLength":512},"phone":{"description":"Phone in format \"+12223334444\"","type":"string","minLength":1,"maxLength":256},"address":{"writeOnly":true,"required":["street_line_1","country","city"],"properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"type":"object"},"birth_date":{"writeOnly":true,"type":"string","description":"Date of birth in format yyyy-mm-dd","minLength":10,"maxLength":10},"tax_identification_number":{"description":"For individual US customers, SSN should be used. For non-US individual customers, a national ID is preferred where applicable; however, a tax ID can also be used as an alternative.","writeOnly":true,"type":"string"},"signed_agreement_id":{"writeOnly":true,"type":"string","description":"ID of the signed agreement, fetched through the Bridge UI","minLength":1,"maxLength":256},"gov_id_country":{"writeOnly":true,"type":"string","description":"Three-letter alpha-3 country code of the provided government id as defined in the ISO 3166-1 spec.","minLength":3,"maxLength":3},"gov_id_image_front":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the front of the customer's government issued ID \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":256},"gov_id_image_back":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the back of the customer's government issued ID \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":256},"proof_of_address_document":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the *Proof-of-Address* document \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif.\nRequired for new customers from the European Economic Area (EEA), including associated principalities and territories. Please refer to [SEPA/Euro services](https://apidocs.bridge.xyz/docs/sepa-euro-transactions) for more details. Utility bills and bank statements are recommended for proof of address.","minLength":1,"maxLength":256},"endorsements":{"writeOnly":true,"type":"array","description":"List of endorsements to request for this customer. If omitted, we'll attempt to grant `base` and `sepa`. N.B. If `sepa` is explicitly requested, `individual` customers will be prompted (and required) to provide proof of address in the hosted KYC flow.","items":{"enum":["base","sepa"]}}},"type":"object"},{"title":"Business Customer (Beta)","required":["type","name","description","email","business_type","source_of_funds","website","address","tax_identification_number","signed_agreement_id","is_dao","transmits_customer_funds","compliance_screening_explanation","ultimate_beneficial_owners","formation_document","ownership_document"],"properties":{"type":{"description":"Type of the customer (individual vs. business)","type":"string","minLength":1,"enum":["business"]},"name":{"type":"string","minLength":1,"maxLength":256},"description":{"type":"string","minLength":1,"maxLength":512},"email":{"type":"string","minLength":1,"maxLength":512},"source_of_funds":{"description":"The source of funds for the business, e.g. profits, income, venture capital, etc.","type":"string","minLength":1,"maxLength":255},"business_type":{"description":"The type of business structure that most closely matches the business customer","type":"string","minLength":1,"enum":["cooperative","corporation","llc","other","partnership","sole_prop","trust"]},"website":{"type":"string","minLength":1,"maxLength":256},"address":{"writeOnly":true,"required":["street_line_1","country","city"],"properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"type":"object"},"tax_identification_number":{"description":"For business US customers, TIN should be used. For non-US business customers, a national ID is preferred where applicable; however, a tax ID can also be used as an alternative.","writeOnly":true,"type":"string"},"signed_agreement_id":{"writeOnly":true,"type":"string","description":"Required ID of the signed agreement, fetched through the Bridge UI","minLength":1,"maxLength":256},"statement_of_funds":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the *Statement of Funds* document following the data-uri scheme i.e. data:image/[type];base64,[base_64_encoded_file_contents] \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .","minLength":1,"maxLength":512},"is_dao":{"type":"boolean","description":"Whether the business is a DAO (Decentralized Autonomous Organization)"},"transmits_customer_funds":{"type":"boolean","description":"True if the business transmits funds on behalf of its customers"},"compliance_screening_explanation":{"type":"string","description":"Required if transmits_customer_funds is true. An explanation of types of compliance screening (KYC, KYB, or AML) the customer performs before transmitting funds on behalf of its customers.","minLength":1,"maxLength":512},"ultimate_beneficial_owners":{"type":"array","description":"List of ultimate beneficial owners","items":{"required":["first_name","last_name","birth_date","email","phone","tax_identification_number","address","gov_id_image_front"],"properties":{"first_name":{"type":"string","minLength":1,"maxLength":256},"middle_name":{"type":"string","minLength":1,"maxLength":256},"last_name":{"type":"string","minLength":1,"maxLength":256},"birth_date":{"type":"string","description":"Date of birth in format yyyy-mm-dd","minLength":10,"maxLength":10},"email":{"type":"string","minLength":1,"maxLength":512},"phone":{"type":"string","minLength":1,"maxLength":256},"tax_identification_number":{"type":"string","description":"For US owners, SSN should be used. For non-US individual owners, a national ID is preferred where applicable; however, a tax ID can also be used as an alternative."},"address":{"required":["street_line_1","country","city"],"properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"type":"object"},"gov_id_country":{"type":"string","description":"Three-letter alpha-3 country code of the submitted government id as defined in the ISO 3166-1 spec.","minLength":3,"maxLength":3},"gov_id_image_front":{"type":"string","description":"Base64 encoded image* of the front of the beneficial owner's government ID, following the data-uri scheme i.e. data:image/[type];base64,[base_64_encoded_file_contents] \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":256},"gov_id_image_back":{"type":"string","description":"Base64 encoded image* of the back of the beneficial owner's government ID, following the data-uri scheme i.e. data:image/[type];base64,[base_64_encoded_file_contents] \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":256},"proof_of_address_document":{"type":"string","description":"Base64 encoded image* of a proof of address document for the beneficial owner, following the data-uri scheme i.e. data:image/[type];base64,[base_64_encoded_file_contents] \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":256}},"type":"object"}},"formation_document":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the *Formation Document* following the data-uri scheme i.e. data:image/[type];base64,[base_64_encoded_file_contents] \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":512},"ownership_document":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the *Ownership Document* following the data-uri scheme i.e. data:image/[type];base64,[base_64_encoded_file_contents] \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif","minLength":1,"maxLength":512},"proof_of_address_document":{"writeOnly":true,"type":"string","description":"Base64 encoded image* of the *Proof-of-Address* document \n\n*Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif.\nRequired for new customers from the European Economic Area (EEA), including associated principalities and territories. Please refer to [SEPA/Euro services](https://apidocs.bridge.xyz/docs/sepa-euro-transactions) for more details. Utility bills and bank statements are recommended for proof of address.","minLength":1,"maxLength":512},"endorsements":{"writeOnly":true,"type":"array","description":"List of endorsements to request for this customer. If omitted, we'll attempt to grant `base` and `sepa`.","items":{"enum":["base","sepa"]}}},"type":"object"}],"discriminator":{"propertyName":"type","mapping":{"individual":"#/components/schemas/UpdateIndividualCustomerPayload","business":"#/components/schemas/UpdateBusinessCustomerPayload"}},"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID"]}]},"response":{"200":{"properties":{"id":{"readOnly":true,"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"first_name":{"type":"string","minLength":1,"maxLength":256},"last_name":{"type":"string","minLength":1,"maxLength":256},"email":{"type":"string","minLength":1,"maxLength":512},"status":{"type":"string","description":"Status of the customer. `manual_review` is deprecated and getting transitioned to `under_review`. `pending` is also deprecated and getting transitioned to `not_started`.\n\n`not_started` `pending` `incomplete` `awaiting_ubo` `manual_review` `under_review` `active` `rejected`","enum":["not_started","pending","incomplete","awaiting_ubo","manual_review","under_review","active","rejected"]},"capabilities":{"type":"object","properties":{"payin_crypto":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payout_crypto":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payin_fiat":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]},"payout_fiat":{"type":"string","description":"State of the customer capability\n\n`pending` `active` `inactive` `rejected`","enum":["pending","active","inactive","rejected"]}}},"future_requirements_due":{"readOnly":true,"description":"Information about requirements that may be needed in the future for the customer (eg. enhanced KYC checks for high volume transactions etc.). Please consult our KYC guide on how to resolve each requirement.","type":"array","minItems":0,"items":{"type":"string","enum":["id_verification"],"description":"`id_verification`"}},"requirements_due":{"readOnly":true,"description":"KYC requirements still needed to be completed. Please consult our KYC guide on how to resolve each requirement.","type":"array","minItems":0,"items":{"type":"string","enum":["external_account","id_verification"],"description":"`external_account` `id_verification`"}},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the customer","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the customer","format":"date-time"},"rejection_reasons":{"readOnly":true,"description":"Reasons why a customer KYC was rejected","type":"array","minItems":0,"items":{"description":"Reason why the kyc_status was rejected","properties":{"developer_reason":{"type":"string","description":"Developer information for why a customer was rejected. Not to be shared with the customer."},"reason":{"type":"string","description":"Reason for why a customer was rejected. To be shared with the customer."},"created_at":{"type":"string","description":"Time of creation of the rejection reason"}},"type":"object"}},"has_accepted_terms_of_service":{"readOnly":true,"description":"Whether the customer has accepted the terms of service.","type":"boolean"},"endorsements":{"readOnly":true,"description":"A summary of whether the customer has received approvals to complete onboarding or use certain products/services offered by Bridge.","type":"array","minItems":0,"items":{"required":["name","status"],"properties":{"name":{"description":"The endorsement type.\n\n`base` `sepa`","type":"string","enum":["base","sepa"]},"status":{"type":"string","enum":["incomplete","approved","revoked"],"description":"`incomplete` `approved` `revoked`"},"additional_requirements":{"description":"Additional requirements that need to be completed for obtaining the approval for the endorsement. \n\n1. `kyc_approval` and `tos_acceptance` are required for the `base` endorsement. \n2. `kyc_with_proof_of_address` and `tos_v2_acceptance` are required for `sepa`. If `tos_v2_acceptance` is not completed, a ToS acceptance link can be retrieved for the current customer from the endpoint `/v0/customers/{customerID}/tos_acceptance_link`. To fulfill the `kyc_with_proof_of_address` requirement, a KYC link can be specifically requested for the current customer via the endpoint `/v0/customers/{customerID}/kyc_link`, with `endorsement=sepa` included in the query string","type":"array","minItems":0,"items":{"type":"string","enum":["kyc_approval","tos_acceptance","kyc_with_proof_of_address","tos_v2_acceptance"],"description":"`kyc_approval` `tos_acceptance` `kyc_with_proof_of_address` `tos_v2_acceptance`"}}},"type":"object"}}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PutCustomersCustomeridExternalAccountsExternalaccountid = {"body":{"required":["id","type"],"properties":{"address":{"required":["street_line_1","country","city"],"properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"writeOnly":true,"description":"address of the beneficiary of this account","type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"externalAccountID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","externalAccountID"]}]},"response":{"200":{"required":["account_owner_name","account_type","active","created_at","currency","customer_id","id","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"customer_id":{"description":"The id of the Bridge customer that this External Account belongs to","type":"string","minLength":1,"readOnly":true},"currency":{"description":"Currency associated with the bank account.\n\n`usd` `eur`","type":"string","enum":["usd","eur"]},"bank_name":{"description":"Bank name of the account (e.g. \"Chase\")","type":"string","minLength":1,"maxLength":256},"account_owner_name":{"description":"Owner of the account Bank Account (e.g. \"John Doe\")","type":"string","minLength":1,"maxLength":256},"last_4":{"description":"Last 4 digits of the bank account number for `us` account type. This field is getting deprecated in favor of the `account.last_4` field","type":"string","minLength":1,"readOnly":true},"account_number":{"writeOnly":true,"description":"Account number of your bank account. This field is getting deprecated in favor of the `account.account_number` field for US accounts.","type":"string","minLength":12},"routing_number":{"writeOnly":true,"description":"Routing number of your bank account. This field is getting deprecated in favor of the `account.routing_number` field for US accounts.","type":"string","minLength":9},"account_type":{"description":"Type of the bank account.\n\n`us` `iban`","type":"string","enum":["us","iban"]},"iban":{"description":"IBAN bank account information. It's populated when the `account_type` is `iban`.","required":["account_number","bic","country","last_4"],"properties":{"account_number":{"type":"string","description":"The International Bank Account Number (IBAN) that will be used to send the funds","minLength":1,"writeOnly":true},"bic":{"type":"string","description":"The Business Identifier Code (BIC) that will be used to send the funds","minLength":1},"country":{"description":"Country in which the bank account is located. It's a three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account":{"description":"US bank account information. It's populated when the `account_type` is `us`","required":["account_number","routing_number","last_4"],"properties":{"account_number":{"type":"string","description":"The bank account number","minLength":1,"writeOnly":true},"routing_number":{"type":"string","description":"The bank routing number","minLength":9,"maxLength":9},"last_4":{"description":"Last 4 digits of the bank account number","minLength":1,"type":"string","readOnly":true}},"type":"object"},"account_owner_type":{"description":"Type of the account ownership\n\n`individual` `business`","type":"string","enum":["individual","business"]},"first_name":{"type":"string","description":"First name of the individual account owner"},"last_name":{"type":"string","description":"Last name of the individual account owner"},"business_name":{"type":"string","description":"Business name of the business account owner"},"address":{"required":["street_line_1","country","city"],"writeOnly":true,"description":"Address of the beneficiary of this account. Required for `us` accounts.","properties":{"street_line_1":{"type":"string","minLength":1},"street_line_2":{"type":"string","minLength":1},"city":{"type":"string","minLength":1},"state":{"type":"string","description":"ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions.","minLength":2,"maxLength":2},"postal_code":{"type":"string","description":"Must be supplied for countries that use postal codes.","minLength":1},"country":{"description":"Three-letter alpha-3 country code as defined in the ISO 3166-1 spec.","type":"string","minLength":3,"maxLength":3}},"type":"object"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the External Account","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the External Account","format":"date-time"},"active":{"readOnly":true,"type":"boolean","description":"Whether or not this External Account is active"},"beneficiary_address_valid":{"readOnly":true,"type":"boolean","description":"Whether the beneficiary address is valid. A valid beneficiary address is required for all US External Accounts"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PutCustomersCustomeridLiquidationAddressesLiquidationaddressid = {"body":{"properties":{"external_account_id":{"properties":{"external_account_id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42}},"type":"object"},"custom_developer_fee_percent":{"description":"The developer fee percent that will be applied to this Liquidation Address or null to use the default fee. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":["string","null"],"format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"liquidationAddressID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","liquidationAddressID"]}]},"response":{"200":{"required":["id","currency","chain","external_account_id","address","destination_payment_rail","destination_currency","created_at","updated_at"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"currency":{"type":"string","enum":["usdc","usdt","dai"],"description":"`usdc` `usdt` `dai`"},"chain":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"external_account_id":{"description":"External bank account to which Bridge will send the funds. The currency associated with the External Account must match the destination currency.","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42},"destination_wire_message":{"description":"A message to be sent with a wire transfer.","type":"string","minLength":1,"maxLength":256},"destination_sepa_reference":{"description":"A reference message to be sent with a SEPA transaction.","type":"string","minLength":6,"maxLength":140},"destination_swift_reference":{"description":"A payment reference message or remittance information to be included in a SWIFT transaction.","type":"string","minLength":1,"maxLength":256},"destination_payment_rail":{"description":"The payment rail that Bridge will use to send funds to the customer.\n\n`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `sepa` `solana` `stellar` `swift`","type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","sepa","solana","stellar","swift"]},"destination_currency":{"description":"The currency that Bridge will use to send funds to the customer.\n\n`usdc` `usdt` `dai` `usd` `eur`","type":"string","enum":["usdc","usdt","dai","usd","eur"]},"address":{"description":"The crypto wallet address the customer will send funds to in order to initiate the payment processing","type":"string","readOnly":true},"destination_address":{"type":"string","description":"The crypto wallet address that Bridge will use to send funds to the customer."},"destination_blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"},"created_at":{"readOnly":true,"type":"string","description":"Time of creation of the Liquidation Address","format":"date-time"},"updated_at":{"readOnly":true,"type":"string","description":"Time of last update of the Liquidation Address","format":"date-time"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PutCustomersCustomeridStaticMemosStaticmemoid = {"body":{"properties":{"destination":{"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"]},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"]},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]}},"type":"object"},"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"staticMemoID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","staticMemoID"]}]},"response":{"200":{"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]},"source_deposit_instructions":{"readOnly":true,"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"currency":{"type":"string","enum":["usd"],"examples":["usd"],"description":"`usd`"},"deposit_message":{"description":"The message that the customer MUST include in their wire memo/message or ACH description.","type":"string","examples":["EXAMPLE_MEMO_MESSAGE"]},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string","examples":["Lead Bank"]},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string","examples":["1801 Main St., Kansas City, MO 64108"]},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string","examples":["87654321"]},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string","examples":["123456789"]},"bank_beneficiary_name":{"description":"The name of the beneficiary of the bank account that the customer should send the deposit to","type":"string","examples":["Bridge Ventures Inc"]}},"type":"object"},"destination":{"required":["currency","payment_rail","address"],"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"],"description":"`usdc` `usdt` `dai`"},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]},"blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PutCustomersCustomeridVirtualAccountsVirtualaccountid = {"body":{"properties":{"destination":{"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"]},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"]},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]}},"type":"object"},"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"},"virtualAccountID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["customerID","virtualAccountID"]}]},"response":{"200":{"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"status":{"description":"The activation status of the Virtual Account\n\n`activated` `deactivated`","type":"string","enum":["activated","deactivated"]},"developer_fee_percent":{"description":"The developer fee percent that will be applied to this Virtual Account. The value is a base 100 percentage, i.e. 10.2% is 10.2 in the API.","type":"string","format":"number","minimum":0,"maximum":100,"exclusiveMaximum":true,"examples":["0.1"]},"source_deposit_instructions":{"readOnly":true,"properties":{"payment_rail":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"deprecated":true,"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"payment_rails":{"description":"The payment rails supported by these deposit instructions","type":"array","items":{"type":"string","enum":["ach","wire","ach_push","arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["ach_push"],"description":"`ach` `wire` `ach_push` `arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"}},"currency":{"type":"string","enum":["usd"],"examples":["usd"],"description":"`usd`"},"bank_name":{"description":"The name of the bank that the customer should send the deposit to","type":"string","examples":["Lead Bank"]},"bank_address":{"description":"The address of the bank that the customer should send the deposit to","type":"string","examples":["1801 Main St., Kansas City, MO 64108"]},"bank_routing_number":{"description":"The routing number of the bank that the customer should send the deposit to","type":"string","examples":["87654321"]},"bank_account_number":{"description":"The account number of the bank that the customer should send the deposit to","type":"string","examples":["123456789"]}},"type":"object"},"destination":{"required":["currency","payment_rail","address"],"properties":{"currency":{"type":"string","enum":["usdc","usdt","dai"],"examples":["usdc"],"description":"`usdc` `usdt` `dai`"},"payment_rail":{"type":"string","enum":["arbitrum","avalanche_c_chain","base","ethereum","optimism","polygon","solana","stellar"],"examples":["polygon"],"description":"`arbitrum` `avalanche_c_chain` `base` `ethereum` `optimism` `polygon` `solana` `stellar`"},"address":{"description":"The crypto wallet address that the customer wishes to ultimately receive funds at","type":"string","examples":["0xdeadbeef"]},"blockchain_memo":{"type":"string","description":"The memo to include in the transaction, for blockchains that support memos only"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const PutWebhooksWebhookid = {"body":{"properties":{"url":{"description":"The new HTTPS URL that Bridge will send events to.","type":"string","minLength":1},"status":{"description":"The new status of the webhook endpoint.  If set to \"active\", the webhook will be enabled and will send requests to the new URL.  If set to \"disabled\", the webhook will be disabled and will not send requests to the URL.","type":"string","enum":["active","disabled"]}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"webhookID":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"$schema":"http://json-schema.org/draft-04/schema#"}},"required":["webhookID"]}]},"response":{"200":{"required":["id","url","status","public_key"],"properties":{"id":{"description":"A UUID that uniquely identifies a resource","type":"string","pattern":"[a-z0-9]*","minLength":1,"maxLength":42,"readOnly":true},"url":{"type":"string","description":"The URL that the webhook will send events to"},"status":{"type":"string","description":"The status of the webhook. Only active webhooks will receive events automatically.\n\n`active` `disabled` `deleted`","enum":["active","disabled","deleted"]},"public_key":{"type":"string","description":"The public key (in PEM format) that should be used to verify the authenticity of webhook events"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"401":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"404":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"required":["code","message"],"properties":{"code":{"type":"string","minLength":1,"maxLength":256},"message":{"type":"string","minLength":1,"maxLength":512},"source":{"title":"ErrorSource","required":["location","key"],"properties":{"location":{"type":"string","enum":["path","query","body","header"],"description":"`path` `query` `body` `header`"},"key":{"type":"string","description":"Comma separated names of the properties or parameters causing the error"}},"type":"object"}},"type":"object","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
export { DeleteCustomersCustomerid, DeleteCustomersCustomeridExternalAccountsExternalaccountid, DeleteTransfersTransferid, DeleteWebhooksWebhookid, GetCustomers, GetCustomersCustomerid, GetCustomersCustomeridExternalAccounts, GetCustomersCustomeridExternalAccountsExternalaccountid, GetCustomersCustomeridKycLink, GetCustomersCustomeridLiquidationAddresses, GetCustomersCustomeridLiquidationAddressesLiquidationaddressid, GetCustomersCustomeridLiquidationAddressesLiquidationaddressidBalances, GetCustomersCustomeridLiquidationAddressesLiquidationaddressidDrains, GetCustomersCustomeridStaticMemos, GetCustomersCustomeridStaticMemosStaticmemoid, GetCustomersCustomeridStaticMemosStaticmemoidHistory, GetCustomersCustomeridTosAcceptanceLink, GetCustomersCustomeridTransfers, GetCustomersCustomeridVirtualAccounts, GetCustomersCustomeridVirtualAccountsVirtualaccountid, GetCustomersCustomeridVirtualAccountsVirtualaccountidHistory, GetDeveloperFeeExternalAccount, GetDeveloperFees, GetExchangeRates, GetKycLinks, GetKycLinksKyclinkid, GetPrefundedAccounts, GetPrefundedAccountsPrefundedaccountid, GetPrefundedAccountsPrefundedaccountidHistory, GetStaticMemosHistory, GetTransfers, GetTransfersTransferid, GetVirtualAccountsHistory, GetWebhooks, GetWebhooksWebhookidEvents, GetWebhooksWebhookidLogs, PostCustomers, PostCustomersCustomeridExternalAccounts, PostCustomersCustomeridLiquidationAddresses, PostCustomersCustomeridPlaidLinkRequests, PostCustomersCustomeridStaticMemos, PostCustomersCustomeridVirtualAccounts, PostCustomersCustomeridVirtualAccountsVirtualaccountidDeactivate, PostCustomersCustomeridVirtualAccountsVirtualaccountidReactivate, PostCustomersTosLinks, PostDeveloperFeeExternalAccount, PostDeveloperFees, PostKycLinks, PostPlaidExchangePublicTokenLinkToken, PostTransfers, PostWebhooks, PostWebhooksWebhookidSend, PutCustomersCustomerid, PutCustomersCustomeridExternalAccountsExternalaccountid, PutCustomersCustomeridLiquidationAddressesLiquidationaddressid, PutCustomersCustomeridStaticMemosStaticmemoid, PutCustomersCustomeridVirtualAccountsVirtualaccountid, PutWebhooksWebhookid }
